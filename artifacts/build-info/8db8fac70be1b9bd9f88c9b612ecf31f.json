{
	"id": "8db8fac70be1b9bd9f88c9b612ecf31f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"USDC.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\nimport {ERC20} from \"./ERC/ERC20.sol\";\n\ncontract USDC is ERC20 {\n    function name() public pure returns (string memory) {\n        return \"USD Coin\";\n    }\n\n    function symbol() public pure returns (string memory) {\n        return \"USDC\";\n    }\n\n    function decimals() public pure returns (uint8) {\n        return 18;\n    }\n\n    function mint(uint256 amount) external returns (bool) {\n        balanceOf[msg.sender] += amount;\n        unchecked {\n            totalSupply += amount; // Cannot overflow\n        }\n        emit Transfer(address(0), msg.sender, amount);\n        return true;\n    }\n\n    function burn(uint256 amount) external returns (bool) {\n        balanceOf[msg.sender] -= amount;\n        unchecked {\n            totalSupply -= amount; // Cannot overflow\n        }\n        emit Transfer(msg.sender, address(0), amount);\n        return true;\n    }\n}\n"
			},
			"ERC/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\n\nabstract contract ERC20 is IERC20, IERC20Metadata {\n    uint256 public totalSupply;\n    mapping(address => uint256) public balanceOf;\n    mapping(address => mapping(address => uint256)) public allowance;\n\n    function transfer(address recipient, uint256 amount) external returns (bool) {\n        require(balanceOf[msg.sender] >= amount, \"insufficient balance\");\n        unchecked {\n            balanceOf[msg.sender] -= amount;\n            balanceOf[recipient] += amount;\n        }\n        emit Transfer(msg.sender, recipient, amount);\n        return true;\n    }\n\n    function approve(address spender, uint256 amount) external returns (bool) {\n        allowance[msg.sender][spender] = amount;\n        emit Approval(msg.sender, spender, amount);\n        return true;\n    }\n\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool) {\n        require(allowance[sender][msg.sender] >= amount, \"insufficient allowance\");\n        require(balanceOf[sender] >= amount, \"insufficient balance\");\n        unchecked {\n            allowance[sender][msg.sender] -= amount;\n            balanceOf[sender] -= amount;\n            balanceOf[recipient] += amount; // Cannot overflow\n        }\n        emit Transfer(sender, recipient, amount);\n        return true;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							}
						},
						"stateVariables": {
							"allowance": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"balanceOf": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply": {
								"details": "Returns the amount of tokens in existence."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"}},\"stateVariables\":{\"allowance\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"balanceOf\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"ERC/ERC20.sol\":{\"keccak256\":\"0x9344ac7f9096f141b308b54d1ba409ef8abf72448bf17dc26c30bfdbf6331313\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0088bf5ba716efdd641aed876476470f69fdd7c03a9e4cc3bbbe871e386e6f63\",\"dweb:/ipfs/QmTX7Z6q37cga3uBZpcmgVge9Xnhif6MdFhVMjEbbTWwqP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 112,
								"contract": "ERC/ERC20.sol:ERC20",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 116,
								"contract": "ERC/ERC20.sol:ERC20",
								"label": "balanceOf",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 122,
								"contract": "ERC/ERC20.sol:ERC20",
								"label": "allowance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"USDC.sol": {
				"USDC": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"USDC.sol\":98:921  contract USDC is ERC20 {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"USDC.sol\":98:921  contract USDC is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x42966c68\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"USDC.sol\":127:213  function name() public pure returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC/ERC20.sol\":759:962  function approve(address spender, uint256 amount) external returns (bool) {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC/ERC20.sol\":248:274  uint256 public totalSupply */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC/ERC20.sol\":968:1514  function transferFrom(... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"USDC.sol\":309:383  function decimals() public pure returns (uint8) {... */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"USDC.sol\":657:919  function burn(uint256 amount) external returns (bool) {... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC/ERC20.sol\":280:324  mapping(address => uint256) public balanceOf */\n    tag_9:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"USDC.sol\":219:303  function symbol() public pure returns (string memory) {... */\n    tag_10:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"USDC.sol\":389:651  function mint(uint256 amount) external returns (bool) {... */\n    tag_11:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC/ERC20.sol\":401:753  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n    tag_12:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC/ERC20.sol\":330:394  mapping(address => mapping(address => uint256)) public allowance */\n    tag_13:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"USDC.sol\":127:213  function name() public pure returns (string memory) {... */\n    tag_16:\n        /* \"USDC.sol\":164:177  string memory */\n      0x60\n        /* \"USDC.sol\":189:206  return \"USD Coin\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x08\n      dup2\n      mstore\n      0x20\n      add\n      0x55534420436f696e000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"USDC.sol\":127:213  function name() public pure returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC/ERC20.sol\":759:962  function approve(address spender, uint256 amount) external returns (bool) {... */\n    tag_22:\n        /* \"ERC/ERC20.sol\":827:831  bool */\n      0x00\n        /* \"ERC/ERC20.sol\":876:882  amount */\n      dup2\n        /* \"ERC/ERC20.sol\":843:852  allowance */\n      0x02\n        /* \"ERC/ERC20.sol\":843:864  allowance[msg.sender] */\n      0x00\n        /* \"ERC/ERC20.sol\":853:863  msg.sender */\n      caller\n        /* \"ERC/ERC20.sol\":843:864  allowance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC/ERC20.sol\":843:873  allowance[msg.sender][spender] */\n      0x00\n        /* \"ERC/ERC20.sol\":865:872  spender */\n      dup6\n        /* \"ERC/ERC20.sol\":843:873  allowance[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC/ERC20.sol\":843:882  allowance[msg.sender][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC/ERC20.sol\":918:925  spender */\n      dup3\n        /* \"ERC/ERC20.sol\":897:934  Approval(msg.sender, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC/ERC20.sol\":906:916  msg.sender */\n      caller\n        /* \"ERC/ERC20.sol\":897:934  Approval(msg.sender, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"ERC/ERC20.sol\":927:933  amount */\n      dup5\n        /* \"ERC/ERC20.sol\":897:934  Approval(msg.sender, spender, amount) */\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC/ERC20.sol\":951:955  true */\n      0x01\n        /* \"ERC/ERC20.sol\":944:955  return true */\n      swap1\n      pop\n        /* \"ERC/ERC20.sol\":759:962  function approve(address spender, uint256 amount) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC/ERC20.sol\":248:274  uint256 public totalSupply */\n    tag_26:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"ERC/ERC20.sol\":968:1514  function transferFrom(... */\n    tag_32:\n        /* \"ERC/ERC20.sol\":1089:1093  bool */\n      0x00\n        /* \"ERC/ERC20.sol\":1146:1152  amount */\n      dup2\n        /* \"ERC/ERC20.sol\":1113:1122  allowance */\n      0x02\n        /* \"ERC/ERC20.sol\":1113:1130  allowance[sender] */\n      0x00\n        /* \"ERC/ERC20.sol\":1123:1129  sender */\n      dup7\n        /* \"ERC/ERC20.sol\":1113:1130  allowance[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC/ERC20.sol\":1113:1142  allowance[sender][msg.sender] */\n      0x00\n        /* \"ERC/ERC20.sol\":1131:1141  msg.sender */\n      caller\n        /* \"ERC/ERC20.sol\":1113:1142  allowance[sender][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC/ERC20.sol\":1113:1152  allowance[sender][msg.sender] >= amount */\n      lt\n      iszero\n        /* \"ERC/ERC20.sol\":1105:1179  require(allowance[sender][msg.sender] >= amount, \"insufficient allowance\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_68:\n        /* \"ERC/ERC20.sol\":1218:1224  amount */\n      dup2\n        /* \"ERC/ERC20.sol\":1197:1206  balanceOf */\n      0x01\n        /* \"ERC/ERC20.sol\":1197:1214  balanceOf[sender] */\n      0x00\n        /* \"ERC/ERC20.sol\":1207:1213  sender */\n      dup7\n        /* \"ERC/ERC20.sol\":1197:1214  balanceOf[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC/ERC20.sol\":1197:1224  balanceOf[sender] >= amount */\n      lt\n      iszero\n        /* \"ERC/ERC20.sol\":1189:1249  require(balanceOf[sender] >= amount, \"insufficient balance\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"ERC/ERC20.sol\":1316:1322  amount */\n      dup2\n        /* \"ERC/ERC20.sol\":1283:1292  allowance */\n      0x02\n        /* \"ERC/ERC20.sol\":1283:1300  allowance[sender] */\n      0x00\n        /* \"ERC/ERC20.sol\":1293:1299  sender */\n      dup7\n        /* \"ERC/ERC20.sol\":1283:1300  allowance[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC/ERC20.sol\":1283:1312  allowance[sender][msg.sender] */\n      0x00\n        /* \"ERC/ERC20.sol\":1301:1311  msg.sender */\n      caller\n        /* \"ERC/ERC20.sol\":1283:1312  allowance[sender][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC/ERC20.sol\":1283:1322  allowance[sender][msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC/ERC20.sol\":1357:1363  amount */\n      dup2\n        /* \"ERC/ERC20.sol\":1336:1345  balanceOf */\n      0x01\n        /* \"ERC/ERC20.sol\":1336:1353  balanceOf[sender] */\n      0x00\n        /* \"ERC/ERC20.sol\":1346:1352  sender */\n      dup7\n        /* \"ERC/ERC20.sol\":1336:1353  balanceOf[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC/ERC20.sol\":1336:1363  balanceOf[sender] -= amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC/ERC20.sol\":1401:1407  amount */\n      dup2\n        /* \"ERC/ERC20.sol\":1377:1386  balanceOf */\n      0x01\n        /* \"ERC/ERC20.sol\":1377:1397  balanceOf[recipient] */\n      0x00\n        /* \"ERC/ERC20.sol\":1387:1396  recipient */\n      dup6\n        /* \"ERC/ERC20.sol\":1377:1397  balanceOf[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC/ERC20.sol\":1377:1407  balanceOf[recipient] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC/ERC20.sol\":1468:1477  recipient */\n      dup3\n        /* \"ERC/ERC20.sol\":1451:1486  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC/ERC20.sol\":1460:1466  sender */\n      dup5\n        /* \"ERC/ERC20.sol\":1451:1486  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"ERC/ERC20.sol\":1479:1485  amount */\n      dup5\n        /* \"ERC/ERC20.sol\":1451:1486  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC/ERC20.sol\":1503:1507  true */\n      0x01\n        /* \"ERC/ERC20.sol\":1496:1507  return true */\n      swap1\n      pop\n        /* \"ERC/ERC20.sol\":968:1514  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"USDC.sol\":309:383  function decimals() public pure returns (uint8) {... */\n    tag_35:\n        /* \"USDC.sol\":350:355  uint8 */\n      0x00\n        /* \"USDC.sol\":374:376  18 */\n      0x12\n        /* \"USDC.sol\":367:376  return 18 */\n      swap1\n      pop\n        /* \"USDC.sol\":309:383  function decimals() public pure returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"USDC.sol\":657:919  function burn(uint256 amount) external returns (bool) {... */\n    tag_41:\n        /* \"USDC.sol\":705:709  bool */\n      0x00\n        /* \"USDC.sol\":746:752  amount */\n      dup2\n        /* \"USDC.sol\":721:730  balanceOf */\n      0x01\n        /* \"USDC.sol\":721:742  balanceOf[msg.sender] */\n      0x00\n        /* \"USDC.sol\":731:741  msg.sender */\n      caller\n        /* \"USDC.sol\":721:742  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"USDC.sol\":721:752  balanceOf[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"USDC.sol\":801:807  amount */\n      dup2\n        /* \"USDC.sol\":786:797  totalSupply */\n      0x00\n      dup1\n        /* \"USDC.sol\":786:807  totalSupply -= amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"USDC.sol\":880:881  0 */\n      0x00\n        /* \"USDC.sol\":851:891  Transfer(msg.sender, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"USDC.sol\":860:870  msg.sender */\n      caller\n        /* \"USDC.sol\":851:891  Transfer(msg.sender, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"USDC.sol\":884:890  amount */\n      dup5\n        /* \"USDC.sol\":851:891  Transfer(msg.sender, address(0), amount) */\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"USDC.sol\":908:912  true */\n      0x01\n        /* \"USDC.sol\":901:912  return true */\n      swap1\n      pop\n        /* \"USDC.sol\":657:919  function burn(uint256 amount) external returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC/ERC20.sol\":280:324  mapping(address => uint256) public balanceOf */\n    tag_46:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"USDC.sol\":219:303  function symbol() public pure returns (string memory) {... */\n    tag_49:\n        /* \"USDC.sol\":258:271  string memory */\n      0x60\n        /* \"USDC.sol\":283:296  return \"USDC\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      0x5553444300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"USDC.sol\":219:303  function symbol() public pure returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"USDC.sol\":389:651  function mint(uint256 amount) external returns (bool) {... */\n    tag_53:\n        /* \"USDC.sol\":437:441  bool */\n      0x00\n        /* \"USDC.sol\":478:484  amount */\n      dup2\n        /* \"USDC.sol\":453:462  balanceOf */\n      0x01\n        /* \"USDC.sol\":453:474  balanceOf[msg.sender] */\n      0x00\n        /* \"USDC.sol\":463:473  msg.sender */\n      caller\n        /* \"USDC.sol\":453:474  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"USDC.sol\":453:484  balanceOf[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"USDC.sol\":533:539  amount */\n      dup2\n        /* \"USDC.sol\":518:529  totalSupply */\n      0x00\n      dup1\n        /* \"USDC.sol\":518:539  totalSupply += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"USDC.sol\":604:614  msg.sender */\n      caller\n        /* \"USDC.sol\":583:623  Transfer(address(0), msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"USDC.sol\":600:601  0 */\n      0x00\n        /* \"USDC.sol\":583:623  Transfer(address(0), msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"USDC.sol\":616:622  amount */\n      dup5\n        /* \"USDC.sol\":583:623  Transfer(address(0), msg.sender, amount) */\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"USDC.sol\":640:644  true */\n      0x01\n        /* \"USDC.sol\":633:644  return true */\n      swap1\n      pop\n        /* \"USDC.sol\":389:651  function mint(uint256 amount) external returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC/ERC20.sol\":401:753  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n    tag_57:\n        /* \"ERC/ERC20.sol\":472:476  bool */\n      0x00\n        /* \"ERC/ERC20.sol\":521:527  amount */\n      dup2\n        /* \"ERC/ERC20.sol\":496:505  balanceOf */\n      0x01\n        /* \"ERC/ERC20.sol\":496:517  balanceOf[msg.sender] */\n      0x00\n        /* \"ERC/ERC20.sol\":506:516  msg.sender */\n      caller\n        /* \"ERC/ERC20.sol\":496:517  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC/ERC20.sol\":496:527  balanceOf[msg.sender] >= amount */\n      lt\n      iszero\n        /* \"ERC/ERC20.sol\":488:552  require(balanceOf[msg.sender] >= amount, \"insufficient balance\") */\n      tag_86\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap1\n      tag_73\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_86:\n        /* \"ERC/ERC20.sol\":611:617  amount */\n      dup2\n        /* \"ERC/ERC20.sol\":586:595  balanceOf */\n      0x01\n        /* \"ERC/ERC20.sol\":586:607  balanceOf[msg.sender] */\n      0x00\n        /* \"ERC/ERC20.sol\":596:606  msg.sender */\n      caller\n        /* \"ERC/ERC20.sol\":586:607  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC/ERC20.sol\":586:617  balanceOf[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC/ERC20.sol\":655:661  amount */\n      dup2\n        /* \"ERC/ERC20.sol\":631:640  balanceOf */\n      0x01\n        /* \"ERC/ERC20.sol\":631:651  balanceOf[recipient] */\n      0x00\n        /* \"ERC/ERC20.sol\":641:650  recipient */\n      dup6\n        /* \"ERC/ERC20.sol\":631:651  balanceOf[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC/ERC20.sol\":631:661  balanceOf[recipient] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC/ERC20.sol\":707:716  recipient */\n      dup3\n        /* \"ERC/ERC20.sol\":686:725  Transfer(msg.sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC/ERC20.sol\":695:705  msg.sender */\n      caller\n        /* \"ERC/ERC20.sol\":686:725  Transfer(msg.sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"ERC/ERC20.sol\":718:724  amount */\n      dup5\n        /* \"ERC/ERC20.sol\":686:725  Transfer(msg.sender, recipient, amount) */\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC/ERC20.sol\":742:746  true */\n      0x01\n        /* \"ERC/ERC20.sol\":735:746  return true */\n      swap1\n      pop\n        /* \"ERC/ERC20.sol\":401:753  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC/ERC20.sol\":330:394  mapping(address => mapping(address => uint256)) public allowance */\n    tag_62:\n      mstore(0x20, 0x02)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_89:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_90:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_91:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_118:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_120\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_118)\n    tag_120:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_92:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_93:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_123\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_89\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":818:889   */\n      tag_124\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_90\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_125\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_91\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":988:1017   */\n      tag_126\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_92\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_18:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_128\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_93\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_95:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_97:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_98:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_134\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_97\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_99:\n        /* \"#utility.yul\":1983:2007   */\n      tag_136\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_98\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_137\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_137:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_100:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_139\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_99\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_101:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_102:\n        /* \"#utility.yul\":2339:2363   */\n      tag_142\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_101\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_143\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_143:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_103:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_145\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_102\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_21:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_148\n      tag_95\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":2632:2751   */\n    tag_147:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_149\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_100\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_150\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_103\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_104:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_105:\n        /* \"#utility.yul\":3196:3217   */\n      tag_153\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_104\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_24:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_155\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_105\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_106:\n        /* \"#utility.yul\":3533:3557   */\n      tag_157\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_101\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_28:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_159\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_106\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_31:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_162\n      tag_95\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":3908:4027   */\n    tag_161:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_163\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_100\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_164\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_100\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_165\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_103\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_107:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_108:\n        /* \"#utility.yul\":4598:4620   */\n      tag_168\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_107\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_37:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_170\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_108\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_40:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_172\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_173\n      tag_95\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":4929:5048   */\n    tag_172:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_174\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_103\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5517   */\n    tag_45:\n        /* \"#utility.yul\":5247:5253   */\n      0x00\n        /* \"#utility.yul\":5296:5298   */\n      0x20\n        /* \"#utility.yul\":5284:5293   */\n      dup3\n        /* \"#utility.yul\":5275:5282   */\n      dup5\n        /* \"#utility.yul\":5271:5294   */\n      sub\n        /* \"#utility.yul\":5267:5299   */\n      slt\n        /* \"#utility.yul\":5264:5383   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":5302:5381   */\n      tag_177\n      tag_95\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":5264:5383   */\n    tag_176:\n        /* \"#utility.yul\":5422:5423   */\n      0x00\n        /* \"#utility.yul\":5447:5500   */\n      tag_178\n        /* \"#utility.yul\":5492:5499   */\n      dup5\n        /* \"#utility.yul\":5483:5489   */\n      dup3\n        /* \"#utility.yul\":5472:5481   */\n      dup6\n        /* \"#utility.yul\":5468:5490   */\n      add\n        /* \"#utility.yul\":5447:5500   */\n      tag_100\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":5437:5500   */\n      swap2\n      pop\n        /* \"#utility.yul\":5393:5510   */\n      pop\n        /* \"#utility.yul\":5188:5517   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5523:5997   */\n    tag_61:\n        /* \"#utility.yul\":5591:5597   */\n      0x00\n        /* \"#utility.yul\":5599:5605   */\n      dup1\n        /* \"#utility.yul\":5648:5650   */\n      0x40\n        /* \"#utility.yul\":5636:5645   */\n      dup4\n        /* \"#utility.yul\":5627:5634   */\n      dup6\n        /* \"#utility.yul\":5623:5646   */\n      sub\n        /* \"#utility.yul\":5619:5651   */\n      slt\n        /* \"#utility.yul\":5616:5735   */\n      iszero\n      tag_180\n      jumpi\n        /* \"#utility.yul\":5654:5733   */\n      tag_181\n      tag_95\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":5616:5735   */\n    tag_180:\n        /* \"#utility.yul\":5774:5775   */\n      0x00\n        /* \"#utility.yul\":5799:5852   */\n      tag_182\n        /* \"#utility.yul\":5844:5851   */\n      dup6\n        /* \"#utility.yul\":5835:5841   */\n      dup3\n        /* \"#utility.yul\":5824:5833   */\n      dup7\n        /* \"#utility.yul\":5820:5842   */\n      add\n        /* \"#utility.yul\":5799:5852   */\n      tag_100\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":5789:5852   */\n      swap3\n      pop\n        /* \"#utility.yul\":5745:5862   */\n      pop\n        /* \"#utility.yul\":5901:5903   */\n      0x20\n        /* \"#utility.yul\":5927:5980   */\n      tag_183\n        /* \"#utility.yul\":5972:5979   */\n      dup6\n        /* \"#utility.yul\":5963:5969   */\n      dup3\n        /* \"#utility.yul\":5952:5961   */\n      dup7\n        /* \"#utility.yul\":5948:5970   */\n      add\n        /* \"#utility.yul\":5927:5980   */\n      tag_100\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":5917:5980   */\n      swap2\n      pop\n        /* \"#utility.yul\":5872:5990   */\n      pop\n        /* \"#utility.yul\":5523:5997   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6003:6175   */\n    tag_109:\n        /* \"#utility.yul\":6143:6167   */\n      0x696e73756666696369656e7420616c6c6f77616e636500000000000000000000\n        /* \"#utility.yul\":6139:6140   */\n      0x00\n        /* \"#utility.yul\":6131:6137   */\n      dup3\n        /* \"#utility.yul\":6127:6141   */\n      add\n        /* \"#utility.yul\":6120:6168   */\n      mstore\n        /* \"#utility.yul\":6003:6175   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6181:6547   */\n    tag_110:\n        /* \"#utility.yul\":6323:6326   */\n      0x00\n        /* \"#utility.yul\":6344:6411   */\n      tag_186\n        /* \"#utility.yul\":6408:6410   */\n      0x16\n        /* \"#utility.yul\":6403:6406   */\n      dup4\n        /* \"#utility.yul\":6344:6411   */\n      tag_90\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":6337:6411   */\n      swap2\n      pop\n        /* \"#utility.yul\":6420:6513   */\n      tag_187\n        /* \"#utility.yul\":6509:6512   */\n      dup3\n        /* \"#utility.yul\":6420:6513   */\n      tag_109\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":6538:6540   */\n      0x20\n        /* \"#utility.yul\":6533:6536   */\n      dup3\n        /* \"#utility.yul\":6529:6541   */\n      add\n        /* \"#utility.yul\":6522:6541   */\n      swap1\n      pop\n        /* \"#utility.yul\":6181:6547   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6553:6972   */\n    tag_70:\n        /* \"#utility.yul\":6719:6723   */\n      0x00\n        /* \"#utility.yul\":6757:6759   */\n      0x20\n        /* \"#utility.yul\":6746:6755   */\n      dup3\n        /* \"#utility.yul\":6742:6760   */\n      add\n        /* \"#utility.yul\":6734:6760   */\n      swap1\n      pop\n        /* \"#utility.yul\":6806:6815   */\n      dup2\n        /* \"#utility.yul\":6800:6804   */\n      dup2\n        /* \"#utility.yul\":6796:6816   */\n      sub\n        /* \"#utility.yul\":6792:6793   */\n      0x00\n        /* \"#utility.yul\":6781:6790   */\n      dup4\n        /* \"#utility.yul\":6777:6794   */\n      add\n        /* \"#utility.yul\":6770:6817   */\n      mstore\n        /* \"#utility.yul\":6834:6965   */\n      tag_189\n        /* \"#utility.yul\":6960:6964   */\n      dup2\n        /* \"#utility.yul\":6834:6965   */\n      tag_110\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":6826:6965   */\n      swap1\n      pop\n        /* \"#utility.yul\":6553:6972   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6978:7148   */\n    tag_111:\n        /* \"#utility.yul\":7118:7140   */\n      0x696e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":7114:7115   */\n      0x00\n        /* \"#utility.yul\":7106:7112   */\n      dup3\n        /* \"#utility.yul\":7102:7116   */\n      add\n        /* \"#utility.yul\":7095:7141   */\n      mstore\n        /* \"#utility.yul\":6978:7148   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7154:7520   */\n    tag_112:\n        /* \"#utility.yul\":7296:7299   */\n      0x00\n        /* \"#utility.yul\":7317:7384   */\n      tag_192\n        /* \"#utility.yul\":7381:7383   */\n      0x14\n        /* \"#utility.yul\":7376:7379   */\n      dup4\n        /* \"#utility.yul\":7317:7384   */\n      tag_90\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":7310:7384   */\n      swap2\n      pop\n        /* \"#utility.yul\":7393:7486   */\n      tag_193\n        /* \"#utility.yul\":7482:7485   */\n      dup3\n        /* \"#utility.yul\":7393:7486   */\n      tag_111\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":7511:7513   */\n      0x20\n        /* \"#utility.yul\":7506:7509   */\n      dup3\n        /* \"#utility.yul\":7502:7514   */\n      add\n        /* \"#utility.yul\":7495:7514   */\n      swap1\n      pop\n        /* \"#utility.yul\":7154:7520   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7526:7945   */\n    tag_73:\n        /* \"#utility.yul\":7692:7696   */\n      0x00\n        /* \"#utility.yul\":7730:7732   */\n      0x20\n        /* \"#utility.yul\":7719:7728   */\n      dup3\n        /* \"#utility.yul\":7715:7733   */\n      add\n        /* \"#utility.yul\":7707:7733   */\n      swap1\n      pop\n        /* \"#utility.yul\":7779:7788   */\n      dup2\n        /* \"#utility.yul\":7773:7777   */\n      dup2\n        /* \"#utility.yul\":7769:7789   */\n      sub\n        /* \"#utility.yul\":7765:7766   */\n      0x00\n        /* \"#utility.yul\":7754:7763   */\n      dup4\n        /* \"#utility.yul\":7750:7767   */\n      add\n        /* \"#utility.yul\":7743:7790   */\n      mstore\n        /* \"#utility.yul\":7807:7938   */\n      tag_195\n        /* \"#utility.yul\":7933:7937   */\n      dup2\n        /* \"#utility.yul\":7807:7938   */\n      tag_112\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":7799:7938   */\n      swap1\n      pop\n        /* \"#utility.yul\":7526:7945   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7951:8131   */\n    tag_113:\n        /* \"#utility.yul\":7999:8076   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7996:7997   */\n      0x00\n        /* \"#utility.yul\":7989:8077   */\n      mstore\n        /* \"#utility.yul\":8096:8100   */\n      0x11\n        /* \"#utility.yul\":8093:8094   */\n      0x04\n        /* \"#utility.yul\":8086:8101   */\n      mstore\n        /* \"#utility.yul\":8120:8124   */\n      0x24\n        /* \"#utility.yul\":8117:8118   */\n      0x00\n        /* \"#utility.yul\":8110:8125   */\n      revert\n        /* \"#utility.yul\":8137:8331   */\n    tag_78:\n        /* \"#utility.yul\":8177:8181   */\n      0x00\n        /* \"#utility.yul\":8197:8217   */\n      tag_198\n        /* \"#utility.yul\":8215:8216   */\n      dup3\n        /* \"#utility.yul\":8197:8217   */\n      tag_101\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":8192:8217   */\n      swap2\n      pop\n        /* \"#utility.yul\":8231:8251   */\n      tag_199\n        /* \"#utility.yul\":8249:8250   */\n      dup4\n        /* \"#utility.yul\":8231:8251   */\n      tag_101\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":8226:8251   */\n      swap3\n      pop\n        /* \"#utility.yul\":8275:8276   */\n      dup3\n        /* \"#utility.yul\":8272:8273   */\n      dup3\n        /* \"#utility.yul\":8268:8277   */\n      sub\n        /* \"#utility.yul\":8260:8277   */\n      swap1\n      pop\n        /* \"#utility.yul\":8299:8300   */\n      dup2\n        /* \"#utility.yul\":8293:8297   */\n      dup2\n        /* \"#utility.yul\":8290:8301   */\n      gt\n        /* \"#utility.yul\":8287:8324   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":8304:8322   */\n      tag_201\n      tag_113\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":8287:8324   */\n    tag_200:\n        /* \"#utility.yul\":8137:8331   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8337:8528   */\n    tag_83:\n        /* \"#utility.yul\":8377:8380   */\n      0x00\n        /* \"#utility.yul\":8396:8416   */\n      tag_203\n        /* \"#utility.yul\":8414:8415   */\n      dup3\n        /* \"#utility.yul\":8396:8416   */\n      tag_101\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":8391:8416   */\n      swap2\n      pop\n        /* \"#utility.yul\":8430:8450   */\n      tag_204\n        /* \"#utility.yul\":8448:8449   */\n      dup4\n        /* \"#utility.yul\":8430:8450   */\n      tag_101\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":8425:8450   */\n      swap3\n      pop\n        /* \"#utility.yul\":8473:8474   */\n      dup3\n        /* \"#utility.yul\":8470:8471   */\n      dup3\n        /* \"#utility.yul\":8466:8475   */\n      add\n        /* \"#utility.yul\":8459:8475   */\n      swap1\n      pop\n        /* \"#utility.yul\":8494:8497   */\n      dup1\n        /* \"#utility.yul\":8491:8492   */\n      dup3\n        /* \"#utility.yul\":8488:8498   */\n      gt\n        /* \"#utility.yul\":8485:8521   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":8501:8519   */\n      tag_206\n      tag_113\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":8485:8521   */\n    tag_205:\n        /* \"#utility.yul\":8337:8528   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220202589265ae8fe2c93715823374900ee0f5623f67eef563de02abd76c9703dcd64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610ef2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806342966c681161007157806342966c681461016857806370a082311461019857806395d89b41146101c8578063a0712d68146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610ace565b60405180910390f35b6100e660048036038101906100e19190610b89565b6102b3565b6040516100f39190610be4565b60405180910390f35b6101046103a5565b6040516101119190610c0e565b60405180910390f35b610134600480360381019061012f9190610c29565b6103ab565b6040516101419190610be4565b60405180910390f35b610152610682565b60405161015f9190610c98565b60405180910390f35b610182600480360381019061017d9190610cb3565b61068b565b60405161018f9190610be4565b60405180910390f35b6101b260048036038101906101ad9190610ce0565b610761565b6040516101bf9190610c0e565b60405180910390f35b6101d0610779565b6040516101dd9190610ace565b60405180910390f35b61020060048036038101906101fb9190610cb3565b6107b6565b60405161020d9190610be4565b60405180910390f35b610230600480360381019061022b9190610b89565b61088c565b60405161023d9190610be4565b60405180910390f35b610260600480360381019061025b9190610d0d565b610a19565b60405161026d9190610c0e565b60405180910390f35b60606040518060400160405280600881526020017f55534420436f696e000000000000000000000000000000000000000000000000815250905090565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516103939190610c0e565b60405180910390a36001905092915050565b60005481565b600081600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561046c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046390610d99565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156104ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e590610e05565b60405180910390fd5b81600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161066f9190610c0e565b60405180910390a3600190509392505050565b60006012905090565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106dc9190610e54565b92505081905550816000808282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107509190610c0e565b60405180910390a360019050919050565b60016020528060005260406000206000915090505481565b60606040518060400160405280600481526020017f5553444300000000000000000000000000000000000000000000000000000000815250905090565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108079190610e88565b925050819055508160008082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161087b9190610c0e565b60405180910390a360019050919050565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610910576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090790610e05565b60405180910390fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a079190610c0e565b60405180910390a36001905092915050565b6002602052816000526040600020602052806000526040600020600091509150505481565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a78578082015181840152602081019050610a5d565b60008484015250505050565b6000601f19601f8301169050919050565b6000610aa082610a3e565b610aaa8185610a49565b9350610aba818560208601610a5a565b610ac381610a84565b840191505092915050565b60006020820190508181036000830152610ae88184610a95565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b2082610af5565b9050919050565b610b3081610b15565b8114610b3b57600080fd5b50565b600081359050610b4d81610b27565b92915050565b6000819050919050565b610b6681610b53565b8114610b7157600080fd5b50565b600081359050610b8381610b5d565b92915050565b60008060408385031215610ba057610b9f610af0565b5b6000610bae85828601610b3e565b9250506020610bbf85828601610b74565b9150509250929050565b60008115159050919050565b610bde81610bc9565b82525050565b6000602082019050610bf96000830184610bd5565b92915050565b610c0881610b53565b82525050565b6000602082019050610c236000830184610bff565b92915050565b600080600060608486031215610c4257610c41610af0565b5b6000610c5086828701610b3e565b9350506020610c6186828701610b3e565b9250506040610c7286828701610b74565b9150509250925092565b600060ff82169050919050565b610c9281610c7c565b82525050565b6000602082019050610cad6000830184610c89565b92915050565b600060208284031215610cc957610cc8610af0565b5b6000610cd784828501610b74565b91505092915050565b600060208284031215610cf657610cf5610af0565b5b6000610d0484828501610b3e565b91505092915050565b60008060408385031215610d2457610d23610af0565b5b6000610d3285828601610b3e565b9250506020610d4385828601610b3e565b9150509250929050565b7f696e73756666696369656e7420616c6c6f77616e636500000000000000000000600082015250565b6000610d83601683610a49565b9150610d8e82610d4d565b602082019050919050565b60006020820190508181036000830152610db281610d76565b9050919050565b7f696e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b6000610def601483610a49565b9150610dfa82610db9565b602082019050919050565b60006020820190508181036000830152610e1e81610de2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e5f82610b53565b9150610e6a83610b53565b9250828203905081811115610e8257610e81610e25565b5b92915050565b6000610e9382610b53565b9150610e9e83610b53565b9250828201905080821115610eb657610eb5610e25565b5b9291505056fea2646970667358221220202589265ae8fe2c93715823374900ee0f5623f67eef563de02abd76c9703dcd64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEF2 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42966C68 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xACE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xB89 JUMP JUMPDEST PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xBE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC29 JUMP JUMPDEST PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xBE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x682 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xC98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xCB3 JUMP JUMPDEST PUSH2 0x68B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xBE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCE0 JUMP JUMPDEST PUSH2 0x761 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x779 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xACE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xCB3 JUMP JUMPDEST PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xBE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xB89 JUMP JUMPDEST PUSH2 0x88C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xBE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD0D JUMP JUMPDEST PUSH2 0xA19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x55534420436F696E000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x393 SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x46C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x463 SWAP1 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x4EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E5 SWAP1 PUSH2 0xE05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x66F SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6DC SWAP2 SWAP1 PUSH2 0xE54 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x750 SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5553444300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x807 SWAP2 SWAP1 PUSH2 0xE88 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x87B SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x910 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x907 SWAP1 PUSH2 0xE05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA07 SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA78 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA0 DUP3 PUSH2 0xA3E JUMP JUMPDEST PUSH2 0xAAA DUP2 DUP6 PUSH2 0xA49 JUMP JUMPDEST SWAP4 POP PUSH2 0xABA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA5A JUMP JUMPDEST PUSH2 0xAC3 DUP2 PUSH2 0xA84 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAE8 DUP2 DUP5 PUSH2 0xA95 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB20 DUP3 PUSH2 0xAF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB30 DUP2 PUSH2 0xB15 JUMP JUMPDEST DUP2 EQ PUSH2 0xB3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB4D DUP2 PUSH2 0xB27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB66 DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB83 DUP2 PUSH2 0xB5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBA0 JUMPI PUSH2 0xB9F PUSH2 0xAF0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBAE DUP6 DUP3 DUP7 ADD PUSH2 0xB3E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBBF DUP6 DUP3 DUP7 ADD PUSH2 0xB74 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBDE DUP2 PUSH2 0xBC9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBF9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC08 DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC23 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC42 JUMPI PUSH2 0xC41 PUSH2 0xAF0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC50 DUP7 DUP3 DUP8 ADD PUSH2 0xB3E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC61 DUP7 DUP3 DUP8 ADD PUSH2 0xB3E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC72 DUP7 DUP3 DUP8 ADD PUSH2 0xB74 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC92 DUP2 PUSH2 0xC7C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCAD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCC9 JUMPI PUSH2 0xCC8 PUSH2 0xAF0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCD7 DUP5 DUP3 DUP6 ADD PUSH2 0xB74 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF6 JUMPI PUSH2 0xCF5 PUSH2 0xAF0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD04 DUP5 DUP3 DUP6 ADD PUSH2 0xB3E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD24 JUMPI PUSH2 0xD23 PUSH2 0xAF0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD32 DUP6 DUP3 DUP7 ADD PUSH2 0xB3E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB3E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E73756666696369656E7420616C6C6F77616E636500000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD83 PUSH1 0x16 DUP4 PUSH2 0xA49 JUMP JUMPDEST SWAP2 POP PUSH2 0xD8E DUP3 PUSH2 0xD4D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDB2 DUP2 PUSH2 0xD76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDEF PUSH1 0x14 DUP4 PUSH2 0xA49 JUMP JUMPDEST SWAP2 POP PUSH2 0xDFA DUP3 PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE1E DUP2 PUSH2 0xDE2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE5F DUP3 PUSH2 0xB53 JUMP JUMPDEST SWAP2 POP PUSH2 0xE6A DUP4 PUSH2 0xB53 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xE82 JUMPI PUSH2 0xE81 PUSH2 0xE25 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE93 DUP3 PUSH2 0xB53 JUMP JUMPDEST SWAP2 POP PUSH2 0xE9E DUP4 PUSH2 0xB53 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xEB6 JUMPI PUSH2 0xEB5 PUSH2 0xE25 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0x25 DUP10 0x26 GAS 0xE8 INVALID 0x2C SWAP4 PUSH18 0x5823374900EE0F5623F67EEF563DE02ABD76 0xC9 PUSH17 0x3DCD64736F6C6343000812003300000000 ",
							"sourceMap": "98:823:3:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@allowance_122": {
									"entryPoint": 2585,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@approve_193": {
									"entryPoint": 691,
									"id": 193,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_116": {
									"entryPoint": 1889,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@burn_351": {
									"entryPoint": 1675,
									"id": 351,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_287": {
									"entryPoint": 1666,
									"id": 287,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_319": {
									"entryPoint": 1974,
									"id": 319,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_271": {
									"entryPoint": 630,
									"id": 271,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_279": {
									"entryPoint": 1913,
									"id": 279,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_112": {
									"entryPoint": 933,
									"id": 112,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_256": {
									"entryPoint": 939,
									"id": 256,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_165": {
									"entryPoint": 2188,
									"id": 165,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2878,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2953,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_20dbb1b88f187125d7e634b087bca125fe84cb7576ed5ae599f7ade955801583_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3554,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_20dbb1b88f187125d7e634b087bca125fe84cb7576ed5ae599f7ade955801583__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3017,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2899,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2650,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 3621,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2800,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2692,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_20dbb1b88f187125d7e634b087bca125fe84cb7576ed5ae599f7ade955801583": {
									"entryPoint": 3405,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee": {
									"entryPoint": 3513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8531:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:4",
														"type": ""
													}
												],
												"src": "7:99:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:4",
														"type": ""
													}
												],
												"src": "112:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:4"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:4",
																"statements": []
															},
															"src": "378:113:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:4"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:4"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:4",
														"type": ""
													}
												],
												"src": "287:246:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:4"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:4",
														"type": ""
													}
												],
												"src": "539:102:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:4",
														"type": ""
													}
												],
												"src": "647:377:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:4"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:4",
														"type": ""
													}
												],
												"src": "1030:313:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1382:6:4",
														"type": ""
													}
												],
												"src": "1349:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1721:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1731:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1703:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1713:7:4",
														"type": ""
													}
												],
												"src": "1676:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1863:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1845:7:4",
														"type": ""
													}
												],
												"src": "1808:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2010:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:43:4"
															},
															"nodeType": "YulIf",
															"src": "1963:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1946:5:4",
														"type": ""
													}
												],
												"src": "1910:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2090:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2100:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2068:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2076:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2084:5:4",
														"type": ""
													}
												],
												"src": "2038:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2238:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2249:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2210:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2220:7:4",
														"type": ""
													}
												],
												"src": "2183:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:43:4"
															},
															"nodeType": "YulIf",
															"src": "2319:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:4",
														"type": ""
													}
												],
												"src": "2266:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2456:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2424:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2432:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2440:5:4",
														"type": ""
													}
												],
												"src": "2394:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:4"
															},
															"nodeType": "YulIf",
															"src": "2632:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "2761:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2805:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2888:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2933:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2584:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2595:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2607:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2615:6:4",
														"type": ""
													}
												],
												"src": "2539:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:48:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3071:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3043:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3053:7:4",
														"type": ""
													}
												],
												"src": "3019:90:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:50:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3184:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:4"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3162:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3169:3:4",
														"type": ""
													}
												],
												"src": "3115:109:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:118:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3294:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3306:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3317:4:4",
														"type": ""
													}
												],
												"src": "3230:210:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3511:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3499:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3506:3:4",
														"type": ""
													}
												],
												"src": "3446:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3668:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3678:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3640:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3652:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3663:4:4",
														"type": ""
													}
												],
												"src": "3570:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:519:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3944:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3911:32:4"
															},
															"nodeType": "YulIf",
															"src": "3908:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "4037:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4081:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4164:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4209:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4292:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4337:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3852:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3863:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3875:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3883:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3891:6:4",
														"type": ""
													}
												],
												"src": "3798:619:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4466:43:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4476:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:4",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:16:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4448:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4458:7:4",
														"type": ""
													}
												],
												"src": "4423:86:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4576:51:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4586:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:4"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4564:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4571:3:4",
														"type": ""
													}
												],
												"src": "4515:112:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4727:120:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4737:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4745:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4773:67:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4699:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4711:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4722:4:4",
														"type": ""
													}
												],
												"src": "4633:214:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4919:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4965:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4932:32:4"
															},
															"nodeType": "YulIf",
															"src": "4929:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "5058:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5102:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4889:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4900:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4912:6:4",
														"type": ""
													}
												],
												"src": "4853:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5254:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5300:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5302:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5302:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5302:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5275:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5284:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5271:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5271:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5296:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5267:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5267:32:4"
															},
															"nodeType": "YulIf",
															"src": "5264:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "5393:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5408:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5422:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5412:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5437:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5472:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5483:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5468:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5468:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5492:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5447:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5447:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5437:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5224:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5235:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5247:6:4",
														"type": ""
													}
												],
												"src": "5188:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5606:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5652:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5654:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5654:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5654:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5627:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5636:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5623:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5623:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5648:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5619:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5619:32:4"
															},
															"nodeType": "YulIf",
															"src": "5616:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "5745:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5760:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5774:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5764:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5789:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5824:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5835:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5820:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5820:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5844:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5799:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5799:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5789:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5872:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5887:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5901:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5891:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5917:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5952:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5963:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5948:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5948:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5972:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5927:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5927:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5917:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5568:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5579:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5591:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5599:6:4",
														"type": ""
													}
												],
												"src": "5523:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6109:66:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6131:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6139:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6127:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6127:14:4"
																	},
																	{
																		"hexValue": "696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6143:24:4",
																		"type": "",
																		"value": "insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6120:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6120:48:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6120:48:4"
														}
													]
												},
												"name": "store_literal_in_memory_20dbb1b88f187125d7e634b087bca125fe84cb7576ed5ae599f7ade955801583",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6101:6:4",
														"type": ""
													}
												],
												"src": "6003:172:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6327:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6337:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6403:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6408:2:4",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6344:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6344:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6337:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6509:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_20dbb1b88f187125d7e634b087bca125fe84cb7576ed5ae599f7ade955801583",
																	"nodeType": "YulIdentifier",
																	"src": "6420:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6420:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6420:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6522:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6533:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6538:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6529:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6529:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6522:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_20dbb1b88f187125d7e634b087bca125fe84cb7576ed5ae599f7ade955801583_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6315:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6323:3:4",
														"type": ""
													}
												],
												"src": "6181:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6724:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6734:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6746:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6757:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6742:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6742:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6734:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6781:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6792:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6777:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6777:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6800:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6806:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6796:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6796:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6770:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6770:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6770:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6826:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6960:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_20dbb1b88f187125d7e634b087bca125fe84cb7576ed5ae599f7ade955801583_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6834:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6834:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6826:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_20dbb1b88f187125d7e634b087bca125fe84cb7576ed5ae599f7ade955801583__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6704:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6719:4:4",
														"type": ""
													}
												],
												"src": "6553:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7084:64:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7106:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7114:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7102:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7102:14:4"
																	},
																	{
																		"hexValue": "696e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7118:22:4",
																		"type": "",
																		"value": "insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7095:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7095:46:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7095:46:4"
														}
													]
												},
												"name": "store_literal_in_memory_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7076:6:4",
														"type": ""
													}
												],
												"src": "6978:170:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7300:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7310:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7376:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7381:2:4",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7317:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7317:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7310:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7482:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee",
																	"nodeType": "YulIdentifier",
																	"src": "7393:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7393:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7393:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7495:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7506:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7511:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7502:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7502:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7495:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7288:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7296:3:4",
														"type": ""
													}
												],
												"src": "7154:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7697:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7707:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7719:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7730:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7715:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7715:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7707:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7754:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7765:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7750:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7750:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7773:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7779:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7769:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7769:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7743:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7743:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7743:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7799:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7933:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7807:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7807:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7799:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7677:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7692:4:4",
														"type": ""
													}
												],
												"src": "7526:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7979:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7996:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7999:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7989:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7989:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7989:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8093:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8096:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8086:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8086:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8086:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8117:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8120:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8110:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8110:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8110:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7951:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8182:149:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8192:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8215:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8197:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8197:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8192:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8226:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8249:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8231:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8231:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8226:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8260:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8272:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8275:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8268:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8268:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8260:4:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8302:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8304:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8304:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8304:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "8293:4:4"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8299:1:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8290:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8290:11:4"
															},
															"nodeType": "YulIf",
															"src": "8287:37:4"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8168:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8171:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "8177:4:4",
														"type": ""
													}
												],
												"src": "8137:194:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8381:147:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8391:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8414:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8396:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8396:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8391:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8425:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8448:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8430:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8430:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8425:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8459:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8470:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8473:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8466:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8466:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8459:3:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8499:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8501:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8501:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8501:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8491:1:4"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "8494:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8488:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8488:10:4"
															},
															"nodeType": "YulIf",
															"src": "8485:36:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8368:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8371:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8377:3:4",
														"type": ""
													}
												],
												"src": "8337:191:4"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_20dbb1b88f187125d7e634b087bca125fe84cb7576ed5ae599f7ade955801583(memPtr) {\n\n        mstore(add(memPtr, 0), \"insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_20dbb1b88f187125d7e634b087bca125fe84cb7576ed5ae599f7ade955801583_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_20dbb1b88f187125d7e634b087bca125fe84cb7576ed5ae599f7ade955801583(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_20dbb1b88f187125d7e634b087bca125fe84cb7576ed5ae599f7ade955801583__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_20dbb1b88f187125d7e634b087bca125fe84cb7576ed5ae599f7ade955801583_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee(memPtr) {\n\n        mstore(add(memPtr, 0), \"insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c806342966c681161007157806342966c681461016857806370a082311461019857806395d89b41146101c8578063a0712d68146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610ace565b60405180910390f35b6100e660048036038101906100e19190610b89565b6102b3565b6040516100f39190610be4565b60405180910390f35b6101046103a5565b6040516101119190610c0e565b60405180910390f35b610134600480360381019061012f9190610c29565b6103ab565b6040516101419190610be4565b60405180910390f35b610152610682565b60405161015f9190610c98565b60405180910390f35b610182600480360381019061017d9190610cb3565b61068b565b60405161018f9190610be4565b60405180910390f35b6101b260048036038101906101ad9190610ce0565b610761565b6040516101bf9190610c0e565b60405180910390f35b6101d0610779565b6040516101dd9190610ace565b60405180910390f35b61020060048036038101906101fb9190610cb3565b6107b6565b60405161020d9190610be4565b60405180910390f35b610230600480360381019061022b9190610b89565b61088c565b60405161023d9190610be4565b60405180910390f35b610260600480360381019061025b9190610d0d565b610a19565b60405161026d9190610c0e565b60405180910390f35b60606040518060400160405280600881526020017f55534420436f696e000000000000000000000000000000000000000000000000815250905090565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516103939190610c0e565b60405180910390a36001905092915050565b60005481565b600081600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561046c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046390610d99565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156104ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e590610e05565b60405180910390fd5b81600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161066f9190610c0e565b60405180910390a3600190509392505050565b60006012905090565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106dc9190610e54565b92505081905550816000808282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107509190610c0e565b60405180910390a360019050919050565b60016020528060005260406000206000915090505481565b60606040518060400160405280600481526020017f5553444300000000000000000000000000000000000000000000000000000000815250905090565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108079190610e88565b925050819055508160008082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161087b9190610c0e565b60405180910390a360019050919050565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610910576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090790610e05565b60405180910390fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a079190610c0e565b60405180910390a36001905092915050565b6002602052816000526040600020602052806000526040600020600091509150505481565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a78578082015181840152602081019050610a5d565b60008484015250505050565b6000601f19601f8301169050919050565b6000610aa082610a3e565b610aaa8185610a49565b9350610aba818560208601610a5a565b610ac381610a84565b840191505092915050565b60006020820190508181036000830152610ae88184610a95565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b2082610af5565b9050919050565b610b3081610b15565b8114610b3b57600080fd5b50565b600081359050610b4d81610b27565b92915050565b6000819050919050565b610b6681610b53565b8114610b7157600080fd5b50565b600081359050610b8381610b5d565b92915050565b60008060408385031215610ba057610b9f610af0565b5b6000610bae85828601610b3e565b9250506020610bbf85828601610b74565b9150509250929050565b60008115159050919050565b610bde81610bc9565b82525050565b6000602082019050610bf96000830184610bd5565b92915050565b610c0881610b53565b82525050565b6000602082019050610c236000830184610bff565b92915050565b600080600060608486031215610c4257610c41610af0565b5b6000610c5086828701610b3e565b9350506020610c6186828701610b3e565b9250506040610c7286828701610b74565b9150509250925092565b600060ff82169050919050565b610c9281610c7c565b82525050565b6000602082019050610cad6000830184610c89565b92915050565b600060208284031215610cc957610cc8610af0565b5b6000610cd784828501610b74565b91505092915050565b600060208284031215610cf657610cf5610af0565b5b6000610d0484828501610b3e565b91505092915050565b60008060408385031215610d2457610d23610af0565b5b6000610d3285828601610b3e565b9250506020610d4385828601610b3e565b9150509250929050565b7f696e73756666696369656e7420616c6c6f77616e636500000000000000000000600082015250565b6000610d83601683610a49565b9150610d8e82610d4d565b602082019050919050565b60006020820190508181036000830152610db281610d76565b9050919050565b7f696e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b6000610def601483610a49565b9150610dfa82610db9565b602082019050919050565b60006020820190508181036000830152610e1e81610de2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e5f82610b53565b9150610e6a83610b53565b9250828203905081811115610e8257610e81610e25565b5b92915050565b6000610e9382610b53565b9150610e9e83610b53565b9250828201905080821115610eb657610eb5610e25565b5b9291505056fea2646970667358221220202589265ae8fe2c93715823374900ee0f5623f67eef563de02abd76c9703dcd64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42966C68 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xACE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xB89 JUMP JUMPDEST PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xBE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC29 JUMP JUMPDEST PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xBE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x682 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xC98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xCB3 JUMP JUMPDEST PUSH2 0x68B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xBE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCE0 JUMP JUMPDEST PUSH2 0x761 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x779 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xACE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xCB3 JUMP JUMPDEST PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xBE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xB89 JUMP JUMPDEST PUSH2 0x88C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xBE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD0D JUMP JUMPDEST PUSH2 0xA19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x55534420436F696E000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x393 SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x46C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x463 SWAP1 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x4EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E5 SWAP1 PUSH2 0xE05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x66F SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6DC SWAP2 SWAP1 PUSH2 0xE54 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x750 SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5553444300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x807 SWAP2 SWAP1 PUSH2 0xE88 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x87B SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x910 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x907 SWAP1 PUSH2 0xE05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA07 SWAP2 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA78 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA0 DUP3 PUSH2 0xA3E JUMP JUMPDEST PUSH2 0xAAA DUP2 DUP6 PUSH2 0xA49 JUMP JUMPDEST SWAP4 POP PUSH2 0xABA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA5A JUMP JUMPDEST PUSH2 0xAC3 DUP2 PUSH2 0xA84 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAE8 DUP2 DUP5 PUSH2 0xA95 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB20 DUP3 PUSH2 0xAF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB30 DUP2 PUSH2 0xB15 JUMP JUMPDEST DUP2 EQ PUSH2 0xB3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB4D DUP2 PUSH2 0xB27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB66 DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB83 DUP2 PUSH2 0xB5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBA0 JUMPI PUSH2 0xB9F PUSH2 0xAF0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBAE DUP6 DUP3 DUP7 ADD PUSH2 0xB3E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBBF DUP6 DUP3 DUP7 ADD PUSH2 0xB74 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBDE DUP2 PUSH2 0xBC9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBF9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC08 DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC23 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC42 JUMPI PUSH2 0xC41 PUSH2 0xAF0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC50 DUP7 DUP3 DUP8 ADD PUSH2 0xB3E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC61 DUP7 DUP3 DUP8 ADD PUSH2 0xB3E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC72 DUP7 DUP3 DUP8 ADD PUSH2 0xB74 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC92 DUP2 PUSH2 0xC7C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCAD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCC9 JUMPI PUSH2 0xCC8 PUSH2 0xAF0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCD7 DUP5 DUP3 DUP6 ADD PUSH2 0xB74 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF6 JUMPI PUSH2 0xCF5 PUSH2 0xAF0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD04 DUP5 DUP3 DUP6 ADD PUSH2 0xB3E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD24 JUMPI PUSH2 0xD23 PUSH2 0xAF0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD32 DUP6 DUP3 DUP7 ADD PUSH2 0xB3E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB3E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E73756666696369656E7420616C6C6F77616E636500000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD83 PUSH1 0x16 DUP4 PUSH2 0xA49 JUMP JUMPDEST SWAP2 POP PUSH2 0xD8E DUP3 PUSH2 0xD4D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDB2 DUP2 PUSH2 0xD76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDEF PUSH1 0x14 DUP4 PUSH2 0xA49 JUMP JUMPDEST SWAP2 POP PUSH2 0xDFA DUP3 PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE1E DUP2 PUSH2 0xDE2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE5F DUP3 PUSH2 0xB53 JUMP JUMPDEST SWAP2 POP PUSH2 0xE6A DUP4 PUSH2 0xB53 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xE82 JUMPI PUSH2 0xE81 PUSH2 0xE25 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE93 DUP3 PUSH2 0xB53 JUMP JUMPDEST SWAP2 POP PUSH2 0xE9E DUP4 PUSH2 0xB53 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xEB6 JUMPI PUSH2 0xEB5 PUSH2 0xE25 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0x25 DUP10 0x26 GAS 0xE8 INVALID 0x2C SWAP4 PUSH18 0x5823374900EE0F5623F67EEF563DE02ABD76 0xC9 PUSH17 0x3DCD64736F6C6343000812003300000000 ",
							"sourceMap": "98:823:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;127:86;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;759:203:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;248:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;968:546;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;309:74:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;657:262;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;280:44:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;219:84:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;389:262;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;401:352:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;330:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;127:86:3;164:13;189:17;;;;;;;;;;;;;;;;;;;127:86;:::o;759:203:2:-;827:4;876:6;843:9;:21;853:10;843:21;;;;;;;;;;;;;;;:30;865:7;843:30;;;;;;;;;;;;;;;:39;;;;918:7;897:37;;906:10;897:37;;;927:6;897:37;;;;;;:::i;:::-;;;;;;;;951:4;944:11;;759:203;;;;:::o;248:26::-;;;;:::o;968:546::-;1089:4;1146:6;1113:9;:17;1123:6;1113:17;;;;;;;;;;;;;;;:29;1131:10;1113:29;;;;;;;;;;;;;;;;:39;;1105:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;1218:6;1197:9;:17;1207:6;1197:17;;;;;;;;;;;;;;;;:27;;1189:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;1316:6;1283:9;:17;1293:6;1283:17;;;;;;;;;;;;;;;:29;1301:10;1283:29;;;;;;;;;;;;;;;;:39;;;;;;;;;;;1357:6;1336:9;:17;1346:6;1336:17;;;;;;;;;;;;;;;;:27;;;;;;;;;;;1401:6;1377:9;:20;1387:9;1377:20;;;;;;;;;;;;;;;;:30;;;;;;;;;;;1468:9;1451:35;;1460:6;1451:35;;;1479:6;1451:35;;;;;;:::i;:::-;;;;;;;;1503:4;1496:11;;968:546;;;;;:::o;309:74:3:-;350:5;374:2;367:9;;309:74;:::o;657:262::-;705:4;746:6;721:9;:21;731:10;721:21;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;801:6;786:11;;:21;;;;;;;;;;;880:1;851:40;;860:10;851:40;;;884:6;851:40;;;;;;:::i;:::-;;;;;;;;908:4;901:11;;657:262;;;:::o;280:44:2:-;;;;;;;;;;;;;;;;;:::o;219:84:3:-;258:13;283;;;;;;;;;;;;;;;;;;;219:84;:::o;389:262::-;437:4;478:6;453:9;:21;463:10;453:21;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;533:6;518:11;;:21;;;;;;;;;;;604:10;583:40;;600:1;583:40;;;616:6;583:40;;;;;;:::i;:::-;;;;;;;;640:4;633:11;;389:262;;;:::o;401:352:2:-;472:4;521:6;496:9;:21;506:10;496:21;;;;;;;;;;;;;;;;:31;;488:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;611:6;586:9;:21;596:10;586:21;;;;;;;;;;;;;;;;:31;;;;;;;;;;;655:6;631:9;:20;641:9;631:20;;;;;;;;;;;;;;;;:30;;;;;;;;;;;707:9;686:39;;695:10;686:39;;;718:6;686:39;;;;;;:::i;:::-;;;;;;;;742:4;735:11;;401:352;;;;:::o;330:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:99:4:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:::-;5247:6;5296:2;5284:9;5275:7;5271:23;5267:32;5264:119;;;5302:79;;:::i;:::-;5264:119;5422:1;5447:53;5492:7;5483:6;5472:9;5468:22;5447:53;:::i;:::-;5437:63;;5393:117;5188:329;;;;:::o;5523:474::-;5591:6;5599;5648:2;5636:9;5627:7;5623:23;5619:32;5616:119;;;5654:79;;:::i;:::-;5616:119;5774:1;5799:53;5844:7;5835:6;5824:9;5820:22;5799:53;:::i;:::-;5789:63;;5745:117;5901:2;5927:53;5972:7;5963:6;5952:9;5948:22;5927:53;:::i;:::-;5917:63;;5872:118;5523:474;;;;;:::o;6003:172::-;6143:24;6139:1;6131:6;6127:14;6120:48;6003:172;:::o;6181:366::-;6323:3;6344:67;6408:2;6403:3;6344:67;:::i;:::-;6337:74;;6420:93;6509:3;6420:93;:::i;:::-;6538:2;6533:3;6529:12;6522:19;;6181:366;;;:::o;6553:419::-;6719:4;6757:2;6746:9;6742:18;6734:26;;6806:9;6800:4;6796:20;6792:1;6781:9;6777:17;6770:47;6834:131;6960:4;6834:131;:::i;:::-;6826:139;;6553:419;;;:::o;6978:170::-;7118:22;7114:1;7106:6;7102:14;7095:46;6978:170;:::o;7154:366::-;7296:3;7317:67;7381:2;7376:3;7317:67;:::i;:::-;7310:74;;7393:93;7482:3;7393:93;:::i;:::-;7511:2;7506:3;7502:12;7495:19;;7154:366;;;:::o;7526:419::-;7692:4;7730:2;7719:9;7715:18;7707:26;;7779:9;7773:4;7769:20;7765:1;7754:9;7750:17;7743:47;7807:131;7933:4;7807:131;:::i;:::-;7799:139;;7526:419;;;:::o;7951:180::-;7999:77;7996:1;7989:88;8096:4;8093:1;8086:15;8120:4;8117:1;8110:15;8137:194;8177:4;8197:20;8215:1;8197:20;:::i;:::-;8192:25;;8231:20;8249:1;8231:20;:::i;:::-;8226:25;;8275:1;8272;8268:9;8260:17;;8299:1;8293:4;8290:11;8287:37;;;8304:18;;:::i;:::-;8287:37;8137:194;;;;:::o;8337:191::-;8377:3;8396:20;8414:1;8396:20;:::i;:::-;8391:25;;8430:20;8448:1;8430:20;:::i;:::-;8425:25;;8473:1;8470;8466:9;8459:16;;8494:3;8491:1;8488:10;8485:36;;;8501:18;;:::i;:::-;8485:36;8337:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "765200",
								"executionCost": "799",
								"totalCost": "765999"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2836",
								"burn(uint256)": "infinite",
								"decimals()": "432",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2474",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 98,
									"end": 921,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 98,
									"end": 921,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 98,
									"end": 921,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 98,
									"end": 921,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 98,
									"end": 921,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 98,
									"end": 921,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 98,
									"end": 921,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 98,
									"end": 921,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 98,
									"end": 921,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 921,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 98,
									"end": 921,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 98,
									"end": 921,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 98,
									"end": 921,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 98,
									"end": 921,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 98,
									"end": 921,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 98,
									"end": 921,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 98,
									"end": 921,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 98,
									"end": 921,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 921,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 98,
									"end": 921,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 98,
									"end": 921,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220202589265ae8fe2c93715823374900ee0f5623f67eef563de02abd76c9703dcd64736f6c63430008120033",
									".code": [
										{
											"begin": 98,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 98,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 98,
											"end": 921,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 98,
											"end": 921,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 921,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 98,
											"end": 921,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 98,
											"end": 921,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 98,
											"end": 921,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 921,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 98,
											"end": 921,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "42966C68"
										},
										{
											"begin": 98,
											"end": 921,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 98,
											"end": 921,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "42966C68"
										},
										{
											"begin": 98,
											"end": 921,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 98,
											"end": 921,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 98,
											"end": 921,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 98,
											"end": 921,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "95D89B41"
										},
										{
											"begin": 98,
											"end": 921,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 98,
											"end": 921,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "A0712D68"
										},
										{
											"begin": 98,
											"end": 921,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 98,
											"end": 921,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 98,
											"end": 921,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 98,
											"end": 921,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "DD62ED3E"
										},
										{
											"begin": 98,
											"end": 921,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 98,
											"end": 921,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 98,
											"end": 921,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 98,
											"end": 921,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "6FDDE03"
										},
										{
											"begin": 98,
											"end": 921,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 98,
											"end": 921,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 98,
											"end": 921,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 98,
											"end": 921,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "18160DDD"
										},
										{
											"begin": 98,
											"end": 921,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 98,
											"end": 921,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 98,
											"end": 921,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 98,
											"end": 921,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "313CE567"
										},
										{
											"begin": 98,
											"end": 921,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 98,
											"end": 921,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 98,
											"end": 921,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 98,
											"end": 921,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 98,
											"end": 921,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 127,
											"end": 213,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 127,
											"end": 213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 127,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 127,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 127,
											"end": 213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 127,
											"end": 213,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 127,
											"end": 213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 127,
											"end": 213,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 127,
											"end": 213,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 127,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 127,
											"end": 213,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 127,
											"end": 213,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 127,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 127,
											"end": 213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 127,
											"end": 213,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 127,
											"end": 213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 127,
											"end": 213,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 127,
											"end": 213,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 127,
											"end": 213,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 127,
											"end": 213,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 127,
											"end": 213,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 127,
											"end": 213,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 127,
											"end": 213,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 759,
											"end": 962,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 759,
											"end": 962,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 759,
											"end": 962,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 759,
											"end": 962,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 759,
											"end": 962,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 759,
											"end": 962,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 759,
											"end": 962,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 759,
											"end": 962,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 759,
											"end": 962,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 759,
											"end": 962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 759,
											"end": 962,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 962,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 759,
											"end": 962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 759,
											"end": 962,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 759,
											"end": 962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 759,
											"end": 962,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 962,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 759,
											"end": 962,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 759,
											"end": 962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 759,
											"end": 962,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 759,
											"end": 962,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 759,
											"end": 962,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 962,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 759,
											"end": 962,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 759,
											"end": 962,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 759,
											"end": 962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 759,
											"end": 962,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 759,
											"end": 962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 759,
											"end": 962,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 759,
											"end": 962,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 759,
											"end": 962,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 962,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 759,
											"end": 962,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 759,
											"end": 962,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 759,
											"end": 962,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 759,
											"end": 962,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 759,
											"end": 962,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 248,
											"end": 274,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 248,
											"end": 274,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 248,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 248,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 248,
											"end": 274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 248,
											"end": 274,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 248,
											"end": 274,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 248,
											"end": 274,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 248,
											"end": 274,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 248,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 248,
											"end": 274,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 248,
											"end": 274,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 248,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 248,
											"end": 274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 248,
											"end": 274,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 248,
											"end": 274,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 248,
											"end": 274,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 248,
											"end": 274,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 248,
											"end": 274,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 248,
											"end": 274,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 248,
											"end": 274,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 248,
											"end": 274,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 248,
											"end": 274,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 968,
											"end": 1514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 968,
											"end": 1514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 968,
											"end": 1514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 309,
											"end": 383,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 309,
											"end": 383,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 309,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 309,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 309,
											"end": 383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 309,
											"end": 383,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 309,
											"end": 383,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 309,
											"end": 383,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 383,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 309,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 309,
											"end": 383,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 309,
											"end": 383,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 309,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 309,
											"end": 383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 309,
											"end": 383,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 309,
											"end": 383,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 309,
											"end": 383,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 383,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 309,
											"end": 383,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 309,
											"end": 383,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 309,
											"end": 383,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 309,
											"end": 383,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 309,
											"end": 383,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 657,
											"end": 919,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 657,
											"end": 919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 657,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 657,
											"end": 919,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 657,
											"end": 919,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 657,
											"end": 919,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 657,
											"end": 919,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 657,
											"end": 919,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 657,
											"end": 919,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 657,
											"end": 919,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 657,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 657,
											"end": 919,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 657,
											"end": 919,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 657,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 657,
											"end": 919,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 657,
											"end": 919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 657,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 657,
											"end": 919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 657,
											"end": 919,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 657,
											"end": 919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 657,
											"end": 919,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 919,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 657,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 657,
											"end": 919,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 657,
											"end": 919,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 657,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 657,
											"end": 919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 657,
											"end": 919,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 657,
											"end": 919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 657,
											"end": 919,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 919,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 657,
											"end": 919,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 657,
											"end": 919,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 657,
											"end": 919,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 657,
											"end": 919,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 657,
											"end": 919,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 280,
											"end": 324,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 280,
											"end": 324,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 280,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 280,
											"end": 324,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 280,
											"end": 324,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 280,
											"end": 324,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 280,
											"end": 324,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 280,
											"end": 324,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 280,
											"end": 324,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 280,
											"end": 324,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 280,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 280,
											"end": 324,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 280,
											"end": 324,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 280,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 280,
											"end": 324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 280,
											"end": 324,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 280,
											"end": 324,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 280,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 280,
											"end": 324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 280,
											"end": 324,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 280,
											"end": 324,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 280,
											"end": 324,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 280,
											"end": 324,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 280,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 280,
											"end": 324,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 280,
											"end": 324,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 280,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 280,
											"end": 324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 280,
											"end": 324,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 280,
											"end": 324,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 280,
											"end": 324,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 280,
											"end": 324,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 280,
											"end": 324,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 280,
											"end": 324,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 280,
											"end": 324,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 280,
											"end": 324,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 280,
											"end": 324,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 219,
											"end": 303,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 219,
											"end": 303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 219,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 219,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 219,
											"end": 303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 219,
											"end": 303,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 219,
											"end": 303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 219,
											"end": 303,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 219,
											"end": 303,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 219,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 219,
											"end": 303,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 219,
											"end": 303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 219,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 219,
											"end": 303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 219,
											"end": 303,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 219,
											"end": 303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 219,
											"end": 303,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 219,
											"end": 303,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 219,
											"end": 303,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 219,
											"end": 303,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 219,
											"end": 303,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 219,
											"end": 303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 219,
											"end": 303,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 389,
											"end": 651,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 389,
											"end": 651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 389,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 389,
											"end": 651,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 389,
											"end": 651,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 651,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 389,
											"end": 651,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 389,
											"end": 651,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 389,
											"end": 651,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 389,
											"end": 651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 389,
											"end": 651,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 389,
											"end": 651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 389,
											"end": 651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 389,
											"end": 651,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 389,
											"end": 651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 389,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 389,
											"end": 651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 389,
											"end": 651,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 389,
											"end": 651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 389,
											"end": 651,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 389,
											"end": 651,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 389,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 389,
											"end": 651,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 389,
											"end": 651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 389,
											"end": 651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 389,
											"end": 651,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 389,
											"end": 651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 389,
											"end": 651,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 389,
											"end": 651,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 389,
											"end": 651,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 651,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 389,
											"end": 651,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 389,
											"end": 651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 651,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 401,
											"end": 753,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 401,
											"end": 753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 401,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 401,
											"end": 753,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 401,
											"end": 753,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 401,
											"end": 753,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 401,
											"end": 753,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 401,
											"end": 753,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 401,
											"end": 753,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 401,
											"end": 753,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 401,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 401,
											"end": 753,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 401,
											"end": 753,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 401,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 401,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 401,
											"end": 753,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 401,
											"end": 753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 401,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 401,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 401,
											"end": 753,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 401,
											"end": 753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 401,
											"end": 753,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 401,
											"end": 753,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 401,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 401,
											"end": 753,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 401,
											"end": 753,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 401,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 401,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 401,
											"end": 753,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 401,
											"end": 753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 401,
											"end": 753,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 401,
											"end": 753,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 401,
											"end": 753,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 401,
											"end": 753,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 401,
											"end": 753,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 401,
											"end": 753,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 401,
											"end": 753,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 330,
											"end": 394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 330,
											"end": 394,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 330,
											"end": 394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 330,
											"end": 394,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 330,
											"end": 394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 330,
											"end": 394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 330,
											"end": 394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 330,
											"end": 394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 330,
											"end": 394,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 330,
											"end": 394,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 330,
											"end": 394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 330,
											"end": 394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 330,
											"end": 394,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 127,
											"end": 213,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 127,
											"end": 213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 164,
											"end": 177,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 189,
											"end": 206,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 189,
											"end": 206,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 189,
											"end": 206,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 189,
											"end": 206,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 189,
											"end": 206,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 189,
											"end": 206,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 189,
											"end": 206,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 189,
											"end": 206,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 189,
											"end": 206,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 189,
											"end": 206,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 189,
											"end": 206,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 189,
											"end": 206,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 189,
											"end": 206,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 189,
											"end": 206,
											"name": "PUSH",
											"source": 3,
											"value": "55534420436F696E000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 189,
											"end": 206,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 189,
											"end": 206,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 189,
											"end": 206,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 189,
											"end": 206,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 189,
											"end": 206,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 127,
											"end": 213,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 127,
											"end": 213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 962,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 759,
											"end": 962,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 827,
											"end": 831,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 843,
											"end": 852,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 843,
											"end": 864,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 863,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 843,
											"end": 864,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 843,
											"end": 864,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 843,
											"end": 864,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 843,
											"end": 864,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 843,
											"end": 864,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 843,
											"end": 864,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 843,
											"end": 864,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 843,
											"end": 864,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 843,
											"end": 864,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 843,
											"end": 864,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 843,
											"end": 864,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 843,
											"end": 864,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 843,
											"end": 864,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 843,
											"end": 864,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 843,
											"end": 864,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 843,
											"end": 873,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 872,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 843,
											"end": 873,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 843,
											"end": 873,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 843,
											"end": 873,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 843,
											"end": 873,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 843,
											"end": 873,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 843,
											"end": 873,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 843,
											"end": 873,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 843,
											"end": 873,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 843,
											"end": 873,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 843,
											"end": 873,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 843,
											"end": 873,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 843,
											"end": 873,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 843,
											"end": 873,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 843,
											"end": 873,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 843,
											"end": 873,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 843,
											"end": 882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 843,
											"end": 882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 843,
											"end": 882,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 843,
											"end": 882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 918,
											"end": 925,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 897,
											"end": 934,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 897,
											"end": 934,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 906,
											"end": 916,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 897,
											"end": 934,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 897,
											"end": 934,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 897,
											"end": 934,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 927,
											"end": 933,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 897,
											"end": 934,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 897,
											"end": 934,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 897,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 897,
											"end": 934,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 897,
											"end": 934,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 897,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 897,
											"end": 934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 897,
											"end": 934,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 897,
											"end": 934,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 897,
											"end": 934,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 897,
											"end": 934,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 897,
											"end": 934,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 897,
											"end": 934,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 897,
											"end": 934,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 897,
											"end": 934,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 897,
											"end": 934,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 951,
											"end": 955,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 944,
											"end": 955,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 944,
											"end": 955,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 759,
											"end": 962,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 759,
											"end": 962,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 759,
											"end": 962,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 759,
											"end": 962,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 759,
											"end": 962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 248,
											"end": 274,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 248,
											"end": 274,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 248,
											"end": 274,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 248,
											"end": 274,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 248,
											"end": 274,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 248,
											"end": 274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1152,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1122,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1113,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1129,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1113,
											"end": 1130,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1113,
											"end": 1130,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1130,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1130,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1113,
											"end": 1130,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1130,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1130,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1130,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1113,
											"end": 1130,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1113,
											"end": 1130,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1142,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1131,
											"end": 1141,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1142,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1113,
											"end": 1142,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1142,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1113,
											"end": 1142,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1142,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1142,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1142,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1113,
											"end": 1142,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1142,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1142,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1142,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1142,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1113,
											"end": 1142,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1142,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1113,
											"end": 1142,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1142,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1152,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1105,
											"end": 1179,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1179,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1105,
											"end": 1179,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1179,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1105,
											"end": 1179,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1179,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1179,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1105,
											"end": 1179,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1105,
											"end": 1179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1105,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1179,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1105,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1179,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1105,
											"end": 1179,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1179,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1179,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1179,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1179,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1179,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1105,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1224,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1206,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1197,
											"end": 1214,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1213,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1214,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1197,
											"end": 1214,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1214,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1197,
											"end": 1214,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1214,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1214,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1214,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1197,
											"end": 1214,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1214,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1214,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1214,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1214,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1197,
											"end": 1214,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1214,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1214,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1214,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1224,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1224,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1189,
											"end": 1249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1189,
											"end": 1249,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1249,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1189,
											"end": 1249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1249,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1189,
											"end": 1249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1189,
											"end": 1249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1189,
											"end": 1249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1249,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1189,
											"end": 1249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1189,
											"end": 1249,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1249,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1249,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1249,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1189,
											"end": 1249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1292,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1283,
											"end": 1300,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1300,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1283,
											"end": 1300,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1300,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1283,
											"end": 1300,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1300,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1300,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1300,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1300,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1300,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1300,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1300,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1300,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1300,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1283,
											"end": 1300,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1311,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1283,
											"end": 1322,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1322,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1322,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1322,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1322,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1322,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1357,
											"end": 1363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1345,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1336,
											"end": 1353,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1346,
											"end": 1352,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1353,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1336,
											"end": 1353,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1353,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1336,
											"end": 1353,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1353,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1353,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1353,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1336,
											"end": 1353,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1353,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1353,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1353,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1353,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1336,
											"end": 1353,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1353,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 1353,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1353,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 1363,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1363,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1363,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1363,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1363,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1363,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1363,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1363,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1363,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1407,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1386,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1377,
											"end": 1397,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1387,
											"end": 1396,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1397,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1377,
											"end": 1397,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1397,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1377,
											"end": 1397,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1397,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1397,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1397,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1377,
											"end": 1397,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1397,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1397,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1397,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1397,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1377,
											"end": 1397,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1397,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1377,
											"end": 1397,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1397,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1377,
											"end": 1407,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1407,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1407,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1407,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1407,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1407,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1407,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1407,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1407,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1407,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1407,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 1477,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1451,
											"end": 1486,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1451,
											"end": 1486,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1460,
											"end": 1466,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1451,
											"end": 1486,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1451,
											"end": 1486,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1451,
											"end": 1486,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1479,
											"end": 1485,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1451,
											"end": 1486,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1486,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1451,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1451,
											"end": 1486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1451,
											"end": 1486,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1451,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1451,
											"end": 1486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1451,
											"end": 1486,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1451,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1451,
											"end": 1486,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1486,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1451,
											"end": 1486,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1451,
											"end": 1486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1451,
											"end": 1486,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1451,
											"end": 1486,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1451,
											"end": 1486,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 1503,
											"end": 1507,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1496,
											"end": 1507,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1496,
											"end": 1507,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1514,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 968,
											"end": 1514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 309,
											"end": 383,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 309,
											"end": 383,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 350,
											"end": 355,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 376,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 367,
											"end": 376,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 367,
											"end": 376,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 309,
											"end": 383,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 309,
											"end": 383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 657,
											"end": 919,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 657,
											"end": 919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 705,
											"end": 709,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 746,
											"end": 752,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 721,
											"end": 730,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 721,
											"end": 742,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 731,
											"end": 741,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 721,
											"end": 742,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 721,
											"end": 742,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 721,
											"end": 742,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 721,
											"end": 742,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 721,
											"end": 742,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 721,
											"end": 742,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 721,
											"end": 742,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 721,
											"end": 742,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 721,
											"end": 742,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 721,
											"end": 742,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 721,
											"end": 742,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 721,
											"end": 742,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 721,
											"end": 742,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 721,
											"end": 742,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 721,
											"end": 742,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 721,
											"end": 742,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 721,
											"end": 752,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 721,
											"end": 752,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 721,
											"end": 752,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 721,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 721,
											"end": 752,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 721,
											"end": 752,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 721,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 721,
											"end": 752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 721,
											"end": 752,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 721,
											"end": 752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 721,
											"end": 752,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 721,
											"end": 752,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 721,
											"end": 752,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 721,
											"end": 752,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 721,
											"end": 752,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 721,
											"end": 752,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 721,
											"end": 752,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 801,
											"end": 807,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 786,
											"end": 797,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 786,
											"end": 797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 786,
											"end": 807,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 786,
											"end": 807,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 786,
											"end": 807,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 786,
											"end": 807,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 786,
											"end": 807,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 786,
											"end": 807,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 786,
											"end": 807,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 786,
											"end": 807,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 786,
											"end": 807,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 786,
											"end": 807,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 786,
											"end": 807,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 880,
											"end": 881,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 851,
											"end": 891,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 851,
											"end": 891,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 860,
											"end": 870,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 851,
											"end": 891,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 851,
											"end": 891,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 851,
											"end": 891,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 851,
											"end": 891,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 851,
											"end": 891,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 851,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 851,
											"end": 891,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 851,
											"end": 891,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 851,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 851,
											"end": 891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 851,
											"end": 891,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 851,
											"end": 891,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 851,
											"end": 891,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 851,
											"end": 891,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 851,
											"end": 891,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 851,
											"end": 891,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 851,
											"end": 891,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 851,
											"end": 891,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 851,
											"end": 891,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 908,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 901,
											"end": 912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 901,
											"end": 912,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 657,
											"end": 919,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 657,
											"end": 919,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 657,
											"end": 919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 657,
											"end": 919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 280,
											"end": 324,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 280,
											"end": 324,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 280,
											"end": 324,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 280,
											"end": 324,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 280,
											"end": 324,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 280,
											"end": 324,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 280,
											"end": 324,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 280,
											"end": 324,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 280,
											"end": 324,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 280,
											"end": 324,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 280,
											"end": 324,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 280,
											"end": 324,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 280,
											"end": 324,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 280,
											"end": 324,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 280,
											"end": 324,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 280,
											"end": 324,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 280,
											"end": 324,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 280,
											"end": 324,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 280,
											"end": 324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 219,
											"end": 303,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 219,
											"end": 303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 258,
											"end": 271,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 283,
											"end": 296,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 283,
											"end": 296,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 283,
											"end": 296,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 283,
											"end": 296,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 283,
											"end": 296,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 283,
											"end": 296,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 283,
											"end": 296,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 283,
											"end": 296,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 283,
											"end": 296,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 283,
											"end": 296,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 283,
											"end": 296,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 283,
											"end": 296,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 283,
											"end": 296,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 283,
											"end": 296,
											"name": "PUSH",
											"source": 3,
											"value": "5553444300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 283,
											"end": 296,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 283,
											"end": 296,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 283,
											"end": 296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 283,
											"end": 296,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 283,
											"end": 296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 219,
											"end": 303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 219,
											"end": 303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 389,
											"end": 651,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 389,
											"end": 651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 437,
											"end": 441,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 484,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 453,
											"end": 462,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 453,
											"end": 474,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 473,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 453,
											"end": 474,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 453,
											"end": 474,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 453,
											"end": 474,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 453,
											"end": 474,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 453,
											"end": 474,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 453,
											"end": 474,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 453,
											"end": 474,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 453,
											"end": 474,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 453,
											"end": 474,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 453,
											"end": 474,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 453,
											"end": 474,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 453,
											"end": 474,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 453,
											"end": 474,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 453,
											"end": 474,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 453,
											"end": 474,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 453,
											"end": 474,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 453,
											"end": 484,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 453,
											"end": 484,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 453,
											"end": 484,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 453,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 453,
											"end": 484,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 453,
											"end": 484,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 453,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 453,
											"end": 484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 453,
											"end": 484,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 453,
											"end": 484,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 453,
											"end": 484,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 453,
											"end": 484,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 453,
											"end": 484,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 453,
											"end": 484,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 453,
											"end": 484,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 453,
											"end": 484,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 453,
											"end": 484,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 533,
											"end": 539,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 518,
											"end": 529,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 518,
											"end": 529,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 518,
											"end": 539,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 518,
											"end": 539,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 518,
											"end": 539,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 518,
											"end": 539,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 518,
											"end": 539,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 518,
											"end": 539,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 518,
											"end": 539,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 518,
											"end": 539,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 518,
											"end": 539,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 518,
											"end": 539,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 518,
											"end": 539,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 604,
											"end": 614,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 583,
											"end": 623,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 583,
											"end": 623,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 600,
											"end": 601,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 623,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 583,
											"end": 623,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 583,
											"end": 623,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 616,
											"end": 622,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 583,
											"end": 623,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 623,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 583,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 583,
											"end": 623,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 583,
											"end": 623,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 583,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 583,
											"end": 623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 583,
											"end": 623,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 583,
											"end": 623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 583,
											"end": 623,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 623,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 583,
											"end": 623,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 583,
											"end": 623,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 583,
											"end": 623,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 583,
											"end": 623,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 583,
											"end": 623,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 640,
											"end": 644,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 633,
											"end": 644,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 633,
											"end": 644,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 389,
											"end": 651,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 389,
											"end": 651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 651,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 389,
											"end": 651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 401,
											"end": 753,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 401,
											"end": 753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 472,
											"end": 476,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 527,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 496,
											"end": 505,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 496,
											"end": 517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 506,
											"end": 516,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 496,
											"end": 517,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 496,
											"end": 517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 496,
											"end": 517,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 496,
											"end": 517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 496,
											"end": 517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 496,
											"end": 517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 496,
											"end": 517,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 496,
											"end": 517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 496,
											"end": 517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 496,
											"end": 517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 496,
											"end": 517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 496,
											"end": 517,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 496,
											"end": 517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 496,
											"end": 517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 517,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 496,
											"end": 517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 496,
											"end": 527,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 496,
											"end": 527,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 488,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 488,
											"end": 552,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 488,
											"end": 552,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 488,
											"end": 552,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 488,
											"end": 552,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 488,
											"end": 552,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 488,
											"end": 552,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 488,
											"end": 552,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 488,
											"end": 552,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 488,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 488,
											"end": 552,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 488,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 488,
											"end": 552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 488,
											"end": 552,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 488,
											"end": 552,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 488,
											"end": 552,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 488,
											"end": 552,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 488,
											"end": 552,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 488,
											"end": 552,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 488,
											"end": 552,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 488,
											"end": 552,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 488,
											"end": 552,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 488,
											"end": 552,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 488,
											"end": 552,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 611,
											"end": 617,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 586,
											"end": 595,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 586,
											"end": 607,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 606,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 586,
											"end": 607,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 586,
											"end": 607,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 586,
											"end": 607,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 586,
											"end": 607,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 586,
											"end": 607,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 586,
											"end": 607,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 586,
											"end": 607,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 586,
											"end": 607,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 586,
											"end": 607,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 586,
											"end": 607,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 586,
											"end": 607,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 586,
											"end": 607,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 586,
											"end": 607,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 586,
											"end": 607,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 586,
											"end": 607,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 586,
											"end": 607,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 586,
											"end": 617,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 586,
											"end": 617,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 586,
											"end": 617,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 586,
											"end": 617,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 586,
											"end": 617,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 586,
											"end": 617,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 586,
											"end": 617,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 586,
											"end": 617,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 586,
											"end": 617,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 586,
											"end": 617,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 586,
											"end": 617,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 655,
											"end": 661,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 631,
											"end": 640,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 631,
											"end": 651,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 641,
											"end": 650,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 631,
											"end": 651,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 631,
											"end": 651,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 631,
											"end": 651,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 631,
											"end": 651,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 631,
											"end": 651,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 631,
											"end": 651,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 631,
											"end": 651,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 631,
											"end": 651,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 631,
											"end": 651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 631,
											"end": 651,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 631,
											"end": 651,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 631,
											"end": 651,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 631,
											"end": 651,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 631,
											"end": 651,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 651,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 631,
											"end": 651,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 661,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 631,
											"end": 661,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 631,
											"end": 661,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 631,
											"end": 661,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 631,
											"end": 661,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 631,
											"end": 661,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 631,
											"end": 661,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 631,
											"end": 661,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 631,
											"end": 661,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 631,
											"end": 661,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 631,
											"end": 661,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 707,
											"end": 716,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 686,
											"end": 725,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 686,
											"end": 725,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 695,
											"end": 705,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 686,
											"end": 725,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 686,
											"end": 725,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 686,
											"end": 725,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 718,
											"end": 724,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 686,
											"end": 725,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 686,
											"end": 725,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 686,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 686,
											"end": 725,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 686,
											"end": 725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 686,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 686,
											"end": 725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 686,
											"end": 725,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 686,
											"end": 725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 686,
											"end": 725,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 686,
											"end": 725,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 686,
											"end": 725,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 686,
											"end": 725,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 686,
											"end": 725,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 686,
											"end": 725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 686,
											"end": 725,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 742,
											"end": 746,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 735,
											"end": 746,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 735,
											"end": 746,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 401,
											"end": 753,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 401,
											"end": 753,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 401,
											"end": 753,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 401,
											"end": 753,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 401,
											"end": 753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 330,
											"end": 394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 330,
											"end": 394,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 330,
											"end": 394,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 330,
											"end": 394,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 330,
											"end": 394,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 330,
											"end": 394,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 330,
											"end": 394,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 330,
											"end": 394,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 330,
											"end": 394,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 330,
											"end": 394,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 330,
											"end": 394,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 330,
											"end": 394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5296,
											"end": 5298,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5284,
											"end": 5293,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5275,
											"end": 5282,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5271,
											"end": 5294,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5267,
											"end": 5299,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 5302,
											"end": 5381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5422,
											"end": 5423,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 5492,
											"end": 5499,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5483,
											"end": 5489,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5472,
											"end": 5481,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5468,
											"end": 5490,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5447,
											"end": 5500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5510,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5188,
											"end": 5517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5591,
											"end": 5597,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5599,
											"end": 5605,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5648,
											"end": 5650,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5636,
											"end": 5645,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5627,
											"end": 5634,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5623,
											"end": 5646,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5619,
											"end": 5651,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5654,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 5654,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 5654,
											"end": 5733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5654,
											"end": 5733,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 5654,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 5616,
											"end": 5735,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5774,
											"end": 5775,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 5844,
											"end": 5851,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5841,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5824,
											"end": 5833,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5820,
											"end": 5842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5799,
											"end": 5852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5852,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 5799,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5789,
											"end": 5852,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5789,
											"end": 5852,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5745,
											"end": 5862,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5901,
											"end": 5903,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5927,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 5972,
											"end": 5979,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5963,
											"end": 5969,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 5961,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5948,
											"end": 5970,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5927,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5927,
											"end": 5980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5927,
											"end": 5980,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 5927,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5980,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5980,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5872,
											"end": 5990,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5523,
											"end": 5997,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5523,
											"end": 5997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6003,
											"end": 6175,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 6003,
											"end": 6175,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6143,
											"end": 6167,
											"name": "PUSH",
											"source": 4,
											"value": "696E73756666696369656E7420616C6C6F77616E636500000000000000000000"
										},
										{
											"begin": 6139,
											"end": 6140,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6131,
											"end": 6137,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6127,
											"end": 6141,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6120,
											"end": 6168,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6003,
											"end": 6175,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6003,
											"end": 6175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6181,
											"end": 6547,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 6181,
											"end": 6547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6323,
											"end": 6326,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6344,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 6408,
											"end": 6410,
											"name": "PUSH",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 6403,
											"end": 6406,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6344,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 6344,
											"end": 6411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6344,
											"end": 6411,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 6344,
											"end": 6411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6337,
											"end": 6411,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6337,
											"end": 6411,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6420,
											"end": 6513,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 6509,
											"end": 6512,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6420,
											"end": 6513,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 6420,
											"end": 6513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6420,
											"end": 6513,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 6420,
											"end": 6513,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6538,
											"end": 6540,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6533,
											"end": 6536,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6529,
											"end": 6541,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6522,
											"end": 6541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6522,
											"end": 6541,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6181,
											"end": 6547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6181,
											"end": 6547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6181,
											"end": 6547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6181,
											"end": 6547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6553,
											"end": 6972,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 6553,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6719,
											"end": 6723,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6757,
											"end": 6759,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6746,
											"end": 6755,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6742,
											"end": 6760,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6734,
											"end": 6760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6734,
											"end": 6760,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6806,
											"end": 6815,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6800,
											"end": 6804,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6796,
											"end": 6816,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6792,
											"end": 6793,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6781,
											"end": 6790,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6777,
											"end": 6794,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6770,
											"end": 6817,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 6960,
											"end": 6964,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 6834,
											"end": 6965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6965,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 6834,
											"end": 6965,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6826,
											"end": 6965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6826,
											"end": 6965,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6553,
											"end": 6972,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6553,
											"end": 6972,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6553,
											"end": 6972,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6553,
											"end": 6972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6978,
											"end": 7148,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 6978,
											"end": 7148,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7118,
											"end": 7140,
											"name": "PUSH",
											"source": 4,
											"value": "696E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 7114,
											"end": 7115,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7106,
											"end": 7112,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7102,
											"end": 7116,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7095,
											"end": 7141,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6978,
											"end": 7148,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6978,
											"end": 7148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7154,
											"end": 7520,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 7154,
											"end": 7520,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7296,
											"end": 7299,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7317,
											"end": 7384,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 7381,
											"end": 7383,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 7376,
											"end": 7379,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7317,
											"end": 7384,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 7317,
											"end": 7384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7317,
											"end": 7384,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 7317,
											"end": 7384,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7310,
											"end": 7384,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7310,
											"end": 7384,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7393,
											"end": 7486,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 7482,
											"end": 7485,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7393,
											"end": 7486,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 7393,
											"end": 7486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7393,
											"end": 7486,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 7393,
											"end": 7486,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7511,
											"end": 7513,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7506,
											"end": 7509,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7502,
											"end": 7514,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7495,
											"end": 7514,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7495,
											"end": 7514,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7154,
											"end": 7520,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7154,
											"end": 7520,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7154,
											"end": 7520,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7154,
											"end": 7520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7526,
											"end": 7945,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 7526,
											"end": 7945,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7692,
											"end": 7696,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7730,
											"end": 7732,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7719,
											"end": 7728,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 7733,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7707,
											"end": 7733,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7779,
											"end": 7788,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7773,
											"end": 7777,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7769,
											"end": 7789,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7766,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7754,
											"end": 7763,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7767,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7743,
											"end": 7790,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7807,
											"end": 7938,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 7933,
											"end": 7937,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7807,
											"end": 7938,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 7807,
											"end": 7938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7807,
											"end": 7938,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 7807,
											"end": 7938,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7799,
											"end": 7938,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7799,
											"end": 7938,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7526,
											"end": 7945,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7526,
											"end": 7945,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7526,
											"end": 7945,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7526,
											"end": 7945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7951,
											"end": 8131,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 7951,
											"end": 8131,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7999,
											"end": 8076,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7996,
											"end": 7997,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7989,
											"end": 8077,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8096,
											"end": 8100,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 8093,
											"end": 8094,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8086,
											"end": 8101,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8120,
											"end": 8124,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 8117,
											"end": 8118,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8110,
											"end": 8125,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8137,
											"end": 8331,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 8137,
											"end": 8331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8177,
											"end": 8181,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8197,
											"end": 8217,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 8215,
											"end": 8216,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8197,
											"end": 8217,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 8197,
											"end": 8217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8197,
											"end": 8217,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 8197,
											"end": 8217,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8192,
											"end": 8217,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8192,
											"end": 8217,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8231,
											"end": 8251,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 8249,
											"end": 8250,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8231,
											"end": 8251,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 8231,
											"end": 8251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8231,
											"end": 8251,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 8231,
											"end": 8251,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8226,
											"end": 8251,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8226,
											"end": 8251,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8275,
											"end": 8276,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8272,
											"end": 8273,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8268,
											"end": 8277,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8260,
											"end": 8277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8260,
											"end": 8277,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8299,
											"end": 8300,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8293,
											"end": 8297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8290,
											"end": 8301,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 8287,
											"end": 8324,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8287,
											"end": 8324,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 8287,
											"end": 8324,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8304,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 8304,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 8304,
											"end": 8322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8304,
											"end": 8322,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 8304,
											"end": 8322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8287,
											"end": 8324,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 8287,
											"end": 8324,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8137,
											"end": 8331,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8137,
											"end": 8331,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8137,
											"end": 8331,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8137,
											"end": 8331,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8137,
											"end": 8331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8337,
											"end": 8528,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 8337,
											"end": 8528,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8377,
											"end": 8380,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8396,
											"end": 8416,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 8414,
											"end": 8415,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8396,
											"end": 8416,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 8396,
											"end": 8416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8396,
											"end": 8416,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 8396,
											"end": 8416,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8391,
											"end": 8416,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8391,
											"end": 8416,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8430,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 8448,
											"end": 8449,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8430,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 8430,
											"end": 8450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8430,
											"end": 8450,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 8430,
											"end": 8450,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8425,
											"end": 8450,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8425,
											"end": 8450,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8473,
											"end": 8474,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8470,
											"end": 8471,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8466,
											"end": 8475,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8459,
											"end": 8475,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8459,
											"end": 8475,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8494,
											"end": 8497,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8491,
											"end": 8492,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8488,
											"end": 8498,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 8485,
											"end": 8521,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8485,
											"end": 8521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 8485,
											"end": 8521,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8501,
											"end": 8519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 8501,
											"end": 8519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 8501,
											"end": 8519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8501,
											"end": 8519,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 8501,
											"end": 8519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8485,
											"end": 8521,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 8485,
											"end": 8521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8337,
											"end": 8528,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8337,
											"end": 8528,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8337,
											"end": 8528,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8337,
											"end": 8528,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8337,
											"end": 8528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"ERC/ERC20.sol",
								"USDC.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"decimals()": "313ce567",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"USDC.sol\":\"USDC\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"ERC/ERC20.sol\":{\"keccak256\":\"0x9344ac7f9096f141b308b54d1ba409ef8abf72448bf17dc26c30bfdbf6331313\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0088bf5ba716efdd641aed876476470f69fdd7c03a9e4cc3bbbe871e386e6f63\",\"dweb:/ipfs/QmTX7Z6q37cga3uBZpcmgVge9Xnhif6MdFhVMjEbbTWwqP\"]},\"USDC.sol\":{\"keccak256\":\"0x2f846c487fe0ca07d0cf4175fb7543d7f77936d969e4a9f8530c53f60cce7869\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2ae17b8401fd8d27d5d47df40e747edbd79f9c76eb534c70a52322c58980cee\",\"dweb:/ipfs/QmYYwCWhu1b732QKLzzhQ4HpS2PgvEYaNNHWiztyFLChjQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 112,
								"contract": "USDC.sol:USDC",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 116,
								"contract": "USDC.sol:USDC",
								"label": "balanceOf",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 122,
								"contract": "USDC.sol:USDC",
								"label": "allowance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"IERC20Metadata": [
							102
						]
					},
					"id": 103,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 103,
							"sourceUnit": 78,
							"src": "135:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 82,
										"name": "IERC20",
										"nameLocations": [
											"305:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "305:6:1"
									},
									"id": 83,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:1"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 81,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:1",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 102,
							"linearizedBaseContracts": [
								102,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 89,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:1"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "416:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 86,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:1"
									},
									"scope": 102,
									"src": "377:54:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:1",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 95,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:1"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "539:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 92,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:1"
									},
									"scope": 102,
									"src": "498:56:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:1",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 101,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:1"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "673:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 98,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:1"
									},
									"scope": 102,
									"src": "630:50:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 103,
							"src": "277:405:1",
							"usedErrors": []
						}
					],
					"src": "110:573:1"
				},
				"id": 1
			},
			"ERC/ERC20.sol": {
				"ast": {
					"absolutePath": "ERC/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							257
						],
						"IERC20": [
							77
						],
						"IERC20Metadata": [
							102
						]
					},
					"id": 258,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 104,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 105,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 258,
							"sourceUnit": 78,
							"src": "58:56:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 106,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 258,
							"sourceUnit": 103,
							"src": "115:75:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 107,
										"name": "IERC20",
										"nameLocations": [
											"219:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "219:6:2"
									},
									"id": 108,
									"nodeType": "InheritanceSpecifier",
									"src": "219:6:2"
								},
								{
									"baseName": {
										"id": 109,
										"name": "IERC20Metadata",
										"nameLocations": [
											"227:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 102,
										"src": "227:14:2"
									},
									"id": 110,
									"nodeType": "InheritanceSpecifier",
									"src": "227:14:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 257,
							"linearizedBaseContracts": [
								257,
								102,
								77
							],
							"name": "ERC20",
							"nameLocation": "210:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										26
									],
									"constant": false,
									"functionSelector": "18160ddd",
									"id": 112,
									"mutability": "mutable",
									"name": "totalSupply",
									"nameLocation": "263:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 257,
									"src": "248:26:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 111,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "248:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"constant": false,
									"functionSelector": "70a08231",
									"id": 116,
									"mutability": "mutable",
									"name": "balanceOf",
									"nameLocation": "315:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 257,
									"src": "280:44:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 115,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 113,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "288:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "280:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 114,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "299:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"constant": false,
									"functionSelector": "dd62ed3e",
									"id": 122,
									"mutability": "mutable",
									"name": "allowance",
									"nameLocation": "385:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 257,
									"src": "330:64:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 121,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 117,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "338:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "330:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 120,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 118,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "357:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "349:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 119,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "368:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "478:275:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 132,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "496:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 135,
																"indexExpression": {
																	"expression": {
																		"id": 133,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "506:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "510:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "506:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 136,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 126,
																"src": "521:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "496:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e73756666696369656e742062616c616e6365",
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "529:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee",
																"typeString": "literal_string \"insufficient balance\""
															},
															"value": "insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee",
																"typeString": "literal_string \"insufficient balance\""
															}
														],
														"id": 131,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "488:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "488:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "488:64:2"
											},
											{
												"id": 154,
												"nodeType": "UncheckedBlock",
												"src": "562:110:2",
												"statements": [
													{
														"expression": {
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 141,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "586:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 144,
																"indexExpression": {
																	"expression": {
																		"id": 142,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "596:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "600:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "596:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "586:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 145,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 126,
																"src": "611:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "586:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 147,
														"nodeType": "ExpressionStatement",
														"src": "586:31:2"
													},
													{
														"expression": {
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 148,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "631:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 150,
																"indexExpression": {
																	"id": 149,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "641:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "631:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 151,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 126,
																"src": "655:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "631:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 153,
														"nodeType": "ExpressionStatement",
														"src": "631:30:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 156,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "695:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "699:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "695:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 158,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 124,
															"src": "707:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 159,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "718:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 155,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "686:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "686:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 161,
												"nodeType": "EmitStatement",
												"src": "681:44:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "742:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 130,
												"id": 163,
												"nodeType": "Return",
												"src": "735:11:2"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "410:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "427:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "419:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "419:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "446:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "438:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "418:35:2"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "472:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 128,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "472:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "471:6:2"
									},
									"scope": 257,
									"src": "401:352:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "833:129:2",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 174,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "843:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 178,
															"indexExpression": {
																"expression": {
																	"id": 175,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "853:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "857:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "853:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "843:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 179,
														"indexExpression": {
															"id": 177,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "865:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "843:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "876:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "843:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "843:39:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 184,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "906:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "910:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "906:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 186,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "918:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 187,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "927:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 183,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "897:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "897:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "EmitStatement",
												"src": "892:42:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "951:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 173,
												"id": 191,
												"nodeType": "Return",
												"src": "944:11:2"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "768:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "784:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "776:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "776:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "801:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "793:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "793:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "775:33:2"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "827:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 171,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "827:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "826:6:2"
									},
									"scope": 257,
									"src": "759:203:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "1095:419:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 205,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 122,
																		"src": "1113:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 207,
																	"indexExpression": {
																		"id": 206,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 195,
																		"src": "1123:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1113:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 210,
																"indexExpression": {
																	"expression": {
																		"id": 208,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1131:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1135:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1131:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1113:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 211,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 199,
																"src": "1146:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1113:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e73756666696369656e7420616c6c6f77616e6365",
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1154:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_20dbb1b88f187125d7e634b087bca125fe84cb7576ed5ae599f7ade955801583",
																"typeString": "literal_string \"insufficient allowance\""
															},
															"value": "insufficient allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_20dbb1b88f187125d7e634b087bca125fe84cb7576ed5ae599f7ade955801583",
																"typeString": "literal_string \"insufficient allowance\""
															}
														],
														"id": 204,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1105:74:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "ExpressionStatement",
												"src": "1105:74:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 217,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "1197:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 219,
																"indexExpression": {
																	"id": 218,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "1207:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1197:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 220,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 199,
																"src": "1218:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1197:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e73756666696369656e742062616c616e6365",
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1226:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee",
																"typeString": "literal_string \"insufficient balance\""
															},
															"value": "insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee",
																"typeString": "literal_string \"insufficient balance\""
															}
														],
														"id": 216,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1189:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1189:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "1189:60:2"
											},
											{
												"id": 246,
												"nodeType": "UncheckedBlock",
												"src": "1259:178:2",
												"statements": [
													{
														"expression": {
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 225,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 122,
																		"src": "1283:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 229,
																	"indexExpression": {
																		"id": 226,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 195,
																		"src": "1293:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1283:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 230,
																"indexExpression": {
																	"expression": {
																		"id": 227,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1301:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1305:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1301:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "1283:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 231,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 199,
																"src": "1316:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1283:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 233,
														"nodeType": "ExpressionStatement",
														"src": "1283:39:2"
													},
													{
														"expression": {
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 234,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "1336:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 236,
																"indexExpression": {
																	"id": 235,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "1346:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "1336:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 237,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 199,
																"src": "1357:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1336:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 239,
														"nodeType": "ExpressionStatement",
														"src": "1336:27:2"
													},
													{
														"expression": {
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 240,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "1377:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 242,
																"indexExpression": {
																	"id": 241,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 197,
																	"src": "1387:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "1377:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 243,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 199,
																"src": "1401:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1377:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 245,
														"nodeType": "ExpressionStatement",
														"src": "1377:30:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 248,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "1460:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 249,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "1468:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 250,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "1479:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 247,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1451:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1451:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 252,
												"nodeType": "EmitStatement",
												"src": "1446:40:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1503:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 203,
												"id": 254,
												"nodeType": "Return",
												"src": "1496:11:2"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "977:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1007:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "999:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1031:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "1023:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1058:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "1050:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1050:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:81:2"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "1089:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 201,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1089:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1088:6:2"
									},
									"scope": 257,
									"src": "968:546:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 258,
							"src": "192:1324:2",
							"usedErrors": []
						}
					],
					"src": "32:1485:2"
				},
				"id": 2
			},
			"USDC.sol": {
				"ast": {
					"absolutePath": "USDC.sol",
					"exportedSymbols": {
						"ERC20": [
							257
						],
						"USDC": [
							352
						]
					},
					"id": 353,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 259,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"absolutePath": "ERC/ERC20.sol",
							"file": "./ERC/ERC20.sol",
							"id": 261,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 353,
							"sourceUnit": 258,
							"src": "58:38:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 260,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 257,
										"src": "66:5:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 262,
										"name": "ERC20",
										"nameLocations": [
											"115:5:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 257,
										"src": "115:5:3"
									},
									"id": 263,
									"nodeType": "InheritanceSpecifier",
									"src": "115:5:3"
								}
							],
							"canonicalName": "USDC",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 352,
							"linearizedBaseContracts": [
								352,
								257,
								102,
								77
							],
							"name": "USDC",
							"nameLocation": "107:4:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										89
									],
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "179:34:3",
										"statements": [
											{
												"expression": {
													"hexValue": "55534420436f696e",
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "196:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_52878b207aaddbfc15ea7bebcda681eb8ccd306e2227b61cef68505c8c056341",
														"typeString": "literal_string \"USD Coin\""
													},
													"value": "USD Coin"
												},
												"functionReturnParameters": 267,
												"id": 269,
												"nodeType": "Return",
												"src": "189:17:3"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "136:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "140:2:3"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "164:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 265,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "164:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "163:15:3"
									},
									"scope": 352,
									"src": "127:86:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										95
									],
									"body": {
										"id": 278,
										"nodeType": "Block",
										"src": "273:30:3",
										"statements": [
											{
												"expression": {
													"hexValue": "55534443",
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "290:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa",
														"typeString": "literal_string \"USDC\""
													},
													"value": "USDC"
												},
												"functionReturnParameters": 275,
												"id": 277,
												"nodeType": "Return",
												"src": "283:13:3"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "228:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "234:2:3"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "258:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 273,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "258:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "257:15:3"
									},
									"scope": 352,
									"src": "219:84:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										101
									],
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "357:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "374:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 283,
												"id": 285,
												"nodeType": "Return",
												"src": "367:9:3"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "318:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "326:2:3"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "350:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 281,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "350:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "349:7:3"
									},
									"scope": 352,
									"src": "309:74:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "443:208:3",
										"statements": [
											{
												"expression": {
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 294,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "453:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 297,
														"indexExpression": {
															"expression": {
																"id": 295,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "463:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "467:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "463:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "453:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 298,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "478:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "453:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "453:31:3"
											},
											{
												"id": 305,
												"nodeType": "UncheckedBlock",
												"src": "494:75:3",
												"statements": [
													{
														"expression": {
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 301,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 112,
																"src": "518:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 302,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 289,
																"src": "533:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "518:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 304,
														"nodeType": "ExpressionStatement",
														"src": "518:21:3"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "600:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 308,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "592:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 307,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "592:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "592:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 311,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "604:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "608:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "604:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 313,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "616:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 306,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "583:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "583:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "EmitStatement",
												"src": "578:45:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "640:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 293,
												"id": 317,
												"nodeType": "Return",
												"src": "633:11:3"
											}
										]
									},
									"functionSelector": "a0712d68",
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "398:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "411:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "403:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:16:3"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "437:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 291,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "437:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "436:6:3"
									},
									"scope": 352,
									"src": "389:262:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "711:208:3",
										"statements": [
											{
												"expression": {
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 326,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "721:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 329,
														"indexExpression": {
															"expression": {
																"id": 327,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "731:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "735:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "731:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "721:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 330,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "746:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "721:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "721:31:3"
											},
											{
												"id": 337,
												"nodeType": "UncheckedBlock",
												"src": "762:75:3",
												"statements": [
													{
														"expression": {
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 333,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 112,
																"src": "786:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 334,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "801:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 336,
														"nodeType": "ExpressionStatement",
														"src": "786:21:3"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 339,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "860:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "864:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "860:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "880:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "872:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 341,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "872:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "872:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 345,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "884:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 338,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "851:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "851:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "846:45:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "908:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 325,
												"id": 349,
												"nodeType": "Return",
												"src": "901:11:3"
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "666:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "679:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "671:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "671:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "670:16:3"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "705:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 323,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "705:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "704:6:3"
									},
									"scope": 352,
									"src": "657:262:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 353,
							"src": "98:823:3",
							"usedErrors": []
						}
					],
					"src": "32:890:3"
				},
				"id": 3
			}
		}
	}
}